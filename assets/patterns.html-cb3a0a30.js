const t=JSON.parse('{"key":"v-1e8c201d","path":"/posts/distribute/patterns.html","title":"《分布式系统设计模式》总结","lang":"zh-CN","frontmatter":{"icon":"edit","title":"《分布式系统设计模式》总结","date":"2024-10-12T00:00:00.000Z","tag":["pattern"],"category":["distribute","pattern"],"description":"《Patterns of Distributed Systems》这本书由 Unmesh Joshi 撰写，全面介绍了分布式系统中的各种模式。以下是对这本书的总结： 第一部分：概述 为什么要分布式 资源限制：CPU、内存、网络和磁盘是计算的基本资源，单服务器处理能力受这些资源上限限制，如网络带宽决定数据传输上限，磁盘有读写速度限制，内存限制可加载的数据量，CPU 处理能力有限。当请求数超过资源上限，请求需排队等待，影响系统吞吐量，因此需通过分布式利用多服务器资源。 分区和复制：介绍了两种常见的分布式架构方式。一是分离业务逻辑和数据层，无状态部分暴露功能，有状态部分由数据库管理，通过水平扩展无状态服务处理更多请求，但存在数据库响应和连接处理问题，可通过添加缓存层缓解，但缓存不适用于所有情况。二是按领域边界分区，如微服务架构，不同领域有各自的软件系统，但共享基础设施组件仍可能面临类似问题。还强调了数据量和请求数增长导致的问题，以及处理数据时故障处理和复制的重要性。 定义分布式系统：存储数据并在多服务器上作为多个进程运行，协调数据状态的软件系统。具有运行在多个进程、管理数据、通过消息传递通信、容忍部分故障等特点。 模式概述 介绍了分布式系统中的两种基本操作：分区和复制。以一个简单的数据记录在三个节点上的复制为例，阐述了在不同场景下如何保证数据的一致性和可用性。","head":[["meta",{"property":"og:url","content":"https://pedrogao.github.io/posts/distribute/patterns.html"}],["meta",{"property":"og:site_name","content":"廊中别苑"}],["meta",{"property":"og:title","content":"《分布式系统设计模式》总结"}],["meta",{"property":"og:description","content":"《Patterns of Distributed Systems》这本书由 Unmesh Joshi 撰写，全面介绍了分布式系统中的各种模式。以下是对这本书的总结： 第一部分：概述 为什么要分布式 资源限制：CPU、内存、网络和磁盘是计算的基本资源，单服务器处理能力受这些资源上限限制，如网络带宽决定数据传输上限，磁盘有读写速度限制，内存限制可加载的数据量，CPU 处理能力有限。当请求数超过资源上限，请求需排队等待，影响系统吞吐量，因此需通过分布式利用多服务器资源。 分区和复制：介绍了两种常见的分布式架构方式。一是分离业务逻辑和数据层，无状态部分暴露功能，有状态部分由数据库管理，通过水平扩展无状态服务处理更多请求，但存在数据库响应和连接处理问题，可通过添加缓存层缓解，但缓存不适用于所有情况。二是按领域边界分区，如微服务架构，不同领域有各自的软件系统，但共享基础设施组件仍可能面临类似问题。还强调了数据量和请求数增长导致的问题，以及处理数据时故障处理和复制的重要性。 定义分布式系统：存储数据并在多服务器上作为多个进程运行，协调数据状态的软件系统。具有运行在多个进程、管理数据、通过消息传递通信、容忍部分故障等特点。 模式概述 介绍了分布式系统中的两种基本操作：分区和复制。以一个简单的数据记录在三个节点上的复制为例，阐述了在不同场景下如何保证数据的一致性和可用性。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-12T14:37:15.000Z"}],["meta",{"property":"article:author","content":"pedrogao"}],["meta",{"property":"article:tag","content":"pattern"}],["meta",{"property":"article:published_time","content":"2024-10-12T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-12T14:37:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"《分布式系统设计模式》总结\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-10-12T00:00:00.000Z\\",\\"dateModified\\":\\"2024-10-12T14:37:15.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"pedrogao\\",\\"url\\":\\"https://github.com/pedrogao/\\"}]}"]]},"headers":[{"level":3,"title":"第一部分：概述","slug":"第一部分-概述","link":"#第一部分-概述","children":[]},{"level":3,"title":"第二部分：数据复制模式","slug":"第二部分-数据复制模式","link":"#第二部分-数据复制模式","children":[]},{"level":3,"title":"第三部分：数据分区模式","slug":"第三部分-数据分区模式","link":"#第三部分-数据分区模式","children":[]},{"level":3,"title":"第四部分：分布式时间模式","slug":"第四部分-分布式时间模式","link":"#第四部分-分布式时间模式","children":[]},{"level":3,"title":"第五部分：集群管理模式","slug":"第五部分-集群管理模式","link":"#第五部分-集群管理模式","children":[]},{"level":3,"title":"第六部分：节点间通信模式","slug":"第六部分-节点间通信模式","link":"#第六部分-节点间通信模式","children":[]},{"level":3,"title":"思考","slug":"思考","link":"#思考","children":[]},{"level":3,"title":"附录","slug":"附录","link":"#附录","children":[]},{"level":3,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1728743835000,"updatedTime":1728743835000,"contributors":[{"name":"pedrogao","email":"1312342604@qq.com","commits":1}]},"readingTime":{"minutes":22.79,"words":6838},"filePathRelative":"posts/distribute/patterns.md","localizedDate":"2024年10月12日","excerpt":"<p>《Patterns of Distributed Systems》这本书由 Unmesh Joshi 撰写，全面介绍了分布式系统中的各种模式。以下是对这本书的总结：</p>\\n<h3> 第一部分：概述</h3>\\n<ul>\\n<li><strong>为什么要分布式</strong>\\n<ul>\\n<li><strong>资源限制</strong>：CPU、内存、网络和磁盘是计算的基本资源，单服务器处理能力受这些资源上限限制，如网络带宽决定数据传输上限，磁盘有读写速度限制，内存限制可加载的数据量，CPU 处理能力有限。当请求数超过资源上限，请求需排队等待，影响系统吞吐量，因此需通过分布式利用多服务器资源。</li>\\n<li><strong>分区和复制</strong>：介绍了两种常见的分布式架构方式。一是分离业务逻辑和数据层，无状态部分暴露功能，有状态部分由数据库管理，通过水平扩展无状态服务处理更多请求，但存在数据库响应和连接处理问题，可通过添加缓存层缓解，但缓存不适用于所有情况。二是按领域边界分区，如微服务架构，不同领域有各自的软件系统，但共享基础设施组件仍可能面临类似问题。还强调了数据量和请求数增长导致的问题，以及处理数据时故障处理和复制的重要性。</li>\\n<li><strong>定义分布式系统</strong>：存储数据并在多服务器上作为多个进程运行，协调数据状态的软件系统。具有运行在多个进程、管理数据、通过消息传递通信、容忍部分故障等特点。</li>\\n</ul>\\n</li>\\n<li><strong>模式概述</strong>\\n<ul>\\n<li>介绍了分布式系统中的两种基本操作：分区和复制。以一个简单的数据记录在三个节点上的复制为例，阐述了在不同场景下如何保证数据的一致性和可用性。</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}');export{t as data};
