import{_ as o}from"./plugin-vue_export-helper.21dcd24c.js";import{r as p,o as c,c as l,a as n,d as t,e,b as s}from"./app.7136131a.js";const i={},u=e(`<h1 id="go-pool-\u6C60\u5316\u5B66\u4E60\u3001\u5B9E\u8DF5\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#go-pool-\u6C60\u5316\u5B66\u4E60\u3001\u5B9E\u8DF5\u603B\u7ED3" aria-hidden="true">#</a> go pool \u6C60\u5316\u5B66\u4E60\u3001\u5B9E\u8DF5\u603B\u7ED3</h1><h2 id="\u6982\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u6982\u8FF0" aria-hidden="true">#</a> \u6982\u8FF0</h2><p>\u6700\u8FD1\u5728\u4E1A\u52A1\u6027\u80FD\u4F18\u5316\u8FC7\u7A0B\u4E2D\uFF0C\u5927\u91CF\u4F7F\u7528\u5230\u4E86 pool \u6C60\u5316\u3001\u7F13\u5B58\u7B49\u6280\u672F\u3002\u5728\u7528 pool \u7684\u65F6\u5019\u4E00\u77E5\u534A\u89E3<br> \u5730\u603C\u4E86\u4E0A\u53BB\uFF0C\u5F85\u4E0A\u7EBF\u8FC7\u540E\u5C31\u5F97\u62BD\u65F6\u95F4\u7CFB\u7EDF\u5B66\u4E60\u3001\u603B\u7ED3\u4E00\u4E0B\uFF0C\u4E8E\u662F\u5C31\u6709\u4E86\u8FD9\u7BC7\u6587\u7AE0\u3002</p><p>\u9996\u5148\uFF0C\u6211\u4EEC\u4ECE\u4E00\u4E2A\u573A\u666F\u51FA\u53D1\uFF0C\u5728\u4E00\u4E2A\u7B80\u5355\u7684 http \u63A5\u53E3\u670D\u52A1\u4E2D\uFF0C\u5982\u4E0B\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">handleV1</span><span class="token punctuation">(</span>writer http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> req <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">var</span> <span class="token punctuation">(</span>
		err  <span class="token builtin">error</span>
		data <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span>
	<span class="token punctuation">)</span>
    <span class="token comment">// ....</span>
	data<span class="token punctuation">,</span> err <span class="token operator">=</span> ioutil<span class="token punctuation">.</span><span class="token function">ReadAll</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>Body<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>
	<span class="token comment">// ...... json.Unmarshal \u4E4B\u7C7B\u7684</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u90FD\u907F\u514D\u4E0D\u4E86\u4ECE\u8BF7\u6C42\u4F53\u4E2D\u8BFB\u53D6\u6570\u636E\uFF0C\u7136\u540E\u5C06\u5176\u89E3\u6790\u4E3A json \u5904\u7406\u3002\u6BCF\u6B21\u670D\u52A1\u6536\u5230\u8BF7\u6C42\u8C03\u7528 <code>handleV1</code>\u51FD\u6570<br> \u90FD\u907F\u514D\u4E0D\u4E86\u5728\u5806\u4E2D(\u5982\u679C\u6570\u636E\u91CF\u5F88\u5C0F\uFF0C\u53EF\u80FD\u5728\u6808\u4E2D)\u5F00\u8F9F\u65B0\u7684 <code>data []byte</code> \u6570\u636E\uFF0C\u800C <code>data</code> \u6570\u636E\u5728<br> \u8BF7\u6C42\u5B8C\u6BD5\u540E\u5C31\u6210\u4E3A\u4E86\u5783\u573E\u6570\u636E\u5F85\u56DE\u6536\u3002</p><p>\u5728\u5E76\u53D1\u91CF\u3001\u8BF7\u6C42\u4F53\u90FD\u5F88\u5927\u7684\u60C5\u51B5\u4E0B\uFF0C\u5185\u5B58\u5C31\u4F1A\u8FC5\u901F\u88AB\u5360\u6EE1\uFF0C\u4ECE\u800C\u65E0\u6CD5\u5F00\u542F\u65B0\u7684\u5185\u5B58\u63A5\u53D7\u65B0\u7684\u8BF7\u6C42\u3002</p><p>\u4E00\u822C\u9047\u5230\u8FD9\u79CD\u5185\u5B58\u5927\u91CF\u5F00\u8F9F\u4E14\u8FC5\u901F\u6D88\u4EA1\u7684\u573A\u666F\uFF0C\u505A\u6027\u80FD\u4F18\u5316\u7684\u65F6\uFF0C\u53EF\u4EE5\u91C7\u7528\u5BF9\u8C61\u6C60\u7684\u65B9\u5F0F\uFF0C<br> \u628A\u4E0D\u7528\u7684\u5BF9\u8C61\u56DE\u6536\u8D77\u6765\uFF0C\u907F\u514D\u88AB\u5783\u573E\u56DE\u6536\u6389\uFF0C\u8FD9\u6837\u4F7F\u7528\u7684\u65F6\u5019\u5C31\u4E0D\u5FC5\u91CD\u65B0\u521B\u5EFA\u3002</p><p>\u7C7B\u4F3C\u7684\u60C5\u51B5\u8FD8\u6709\uFF1A\u6570\u636E\u5E93\u8FDE\u63A5\u3001TCP \u957F\u8FDE\u63A5\u3001HTTP \u5BA2\u6237\u7AEF\u8FDE\u63A5\u7B49\uFF0C\u8FD9\u4E9B\u8FDE\u63A5\u5728\u521B\u5EFA\u7684\u65F6\u5019\u662F\u4E00\u4E2A\u975E\u5E38\u8017\u65F6\u7684\u64CD\u4F5C\u3002</p><p>\u5982\u679C\u6BCF\u6B21\u90FD\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\u8FDE\u63A5\u5BF9\u8C61\uFF0C\u8017\u65F6\u8F83\u957F\uFF0C\u5F88\u53EF\u80FD\u6574\u4E2A\u4E1A\u52A1\u7684\u5927\u90E8\u5206\u8017\u65F6\u90FD\u82B1\u5728\u4E86\u521B\u5EFA\u8FDE\u63A5\u4E0A\u3002<br> \u5982\u679C\u628A\u8FD9\u4E9B\u8FDE\u63A5\u4FDD\u5B58\u4E0B\u6765\uFF0C\u907F\u514D\u6BCF\u6B21\u4F7F\u7528\u7684\u65F6\u5019\u90FD\u91CD\u65B0\u521B\u5EFA\uFF0C\u4E0D\u4EC5\u53EF\u4EE5\u51CF\u5C11\u4E1A\u52A1\u7684\u8017\u65F6\uFF0C\u8FD8\u80FD\u63D0\u9AD8\u5E94\u7528\u7A0B\u5E8F\u7684\u6574\u4F53\u6027\u80FD\u3002</p><h2 id="go-pool" tabindex="-1"><a class="header-anchor" href="#go-pool" aria-hidden="true">#</a> Go pool</h2><p>Go \u6807\u51C6\u5E93\u4E2D\u63D0\u4F9B\u4E86\u4E00\u4E2A\u901A\u7528\u7684 pool \u6570\u636E\u7ED3\u6784\uFF0C\u4E5F\u5C31\u662F sync.Pool\uFF0C\u6765\u5E2E\u52A9\u6211\u4EEC\u6765\u5904\u7406\u8FD9\u7C7B\u95EE\u9898\u3002</p><p>\u4F46\uFF0CGo pool \u4E5F\u6709\u4E0D\u9002\u5408\u7684\u573A\u666F\uFF0C\u5B83\u6C60\u5316\u7684\u5BF9\u8C61\u53EF\u80FD\u4F1A\u88AB\u5783\u573E\u56DE\u6536\u6389\uFF0C<br> \u8FD9\u5BF9\u4E8E\u6570\u636E\u5E93\u957F\u8FDE\u63A5\u7B49\u573A\u666F\u662F\u4E0D\u5408\u9002\u7684\uFF0C\u56E0\u6B64\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528\u5176\u5B83\u7684\u6C60\u5316\u65B9\u5F0F\uFF0C<br> \u540E\u9762\u6211\u4EEC\u518D\u6765\u8C08\u8FD9\u4E2A\u3002</p><p>sync.Pool \u7528\u6765\u4FDD\u5B58\u4E00\u7EC4\u53EF\u72EC\u7ACB\u8BBF\u95EE\u7684<strong>\u4E34\u65F6</strong>\u5BF9\u8C61\u3002</p><p>\u6CE8\u610F\u8FD9\u91CC\u7684\u201C\u4E34\u65F6\u201D\u8FD9\u4E24\u4E2A\u5B57\uFF0C\u5B83\u8BF4\u660E pool \u4E2D\u7684\u5BF9\u8C61\u53EF\u80FD\u4F1A\u88AB\u5783\u573E\u56DE\u6536(GC)\u7ED9\u5E72\u6389\u3002</p><p>pool \u53EF\u4EE5\u6709\u6548\u5730\u51CF\u5C11\u65B0\u5BF9\u8C61\u7684\u7533\u8BF7\uFF0C\u63D0\u5347\u5185\u5B58\u7684\u5E94\u7528\u6548\u7387\uFF0C\u6240\u4EE5 Go \u6807\u51C6\u5E93\u4E5F\u7528\u5230\u4E86 pool\u3002<br> \u5728 fmt \u5305\u4E2D\uFF0C\u4F7F\u7528\u4E86\u4E00\u4E2A\u52A8\u6001\u5927\u5C0F\u7684 buffer \u6C60\u505A\u8F93\u51FA\u7F13\u5B58\uFF0C\u5F53\u5927\u91CF\u7684 goroutine \u5E76\u53D1\u8F93\u51FA\u7684\u65F6\u5019\uFF0C<br> \u5C31\u4F1A\u521B\u5EFA\u6BD4\u8F83\u591A\u7684 buffer\uFF0C\u5E76\u4E14\u5728\u4E0D\u9700\u8981\u7684\u65F6\u5019\u56DE\u6536\u6389\u3002</p><p>pool \u6709\u4E24\u4E2A\u91CD\u8981\u7684\u77E5\u8BC6\u70B9\uFF1A</p><ul><li>pool \u672C\u8EAB\u5C31\u662F\u7EBF\u7A0B\u5B89\u5168\u7684\uFF0C\u591A\u4E2A goroutine \u53EF\u4EE5\u5E76\u53D1\u5730\u8C03\u7528\u5B83\u7684\u65B9\u6CD5\u5B58\u53D6\u5BF9\u8C61\uFF1B</li><li>pool \u4E0D\u53EF\u5728\u4F7F\u7528\u4E4B\u540E\u518D\u590D\u5236\u4F7F\u7528\uFF0C\u5185\u5D4C\u4E86 <code>noCopy</code> \u7ED3\u6784\u4F53\uFF0C<code>go vet</code> \u65F6\u68C0\u67E5\u3002</li></ul><p>\u53E6\u5916\uFF0Cpool API \u975E\u5E38\u6613\u7528\uFF0C\u5BF9\u5916\u63D0\u4F9B\u4E86\u4E09\u4E2A\u65B9\u6CD5\uFF0C\u5206\u522B\u662F <code>New</code>\uFF0C<code>Put</code> \u548C <code>Get</code>\u3002</p><ul><li>New\uFF1Astruct Pool \u5305\u542B\u4E86\u4E00\u4E2A New \u5B57\u6BB5\uFF0C\u8FD9\u4E2A\u5B57\u6BB5\u7684\u7C7B\u578B\u662F\u51FD\u6570 func() interface{}\u3002<br> \u5F53\u8C03\u7528 pool \u7684 Get \u65B9\u6CD5\u4ECE\u6C60\u4E2D\u83B7\u53D6\u5143\u7D20\uFF0C\u6CA1\u6709\u66F4\u591A\u7684\u7A7A\u95F2\u5143\u7D20\u53EF\u8FD4\u56DE\u65F6\uFF0C\u5C31\u4F1A\u8C03\u7528\u8FD9\u4E2A New \u65B9\u6CD5\u6765\u521B\u5EFA\u65B0\u7684\u5143\u7D20\u3002<br> \u5982\u679C\u6CA1\u6709\u8BBE\u7F6E New \u5B57\u6BB5\uFF0C\u6CA1\u6709\u66F4\u591A\u7684\u7A7A\u95F2\u5143\u7D20\u53EF\u8FD4\u56DE\u65F6\uFF0CGet \u65B9\u6CD5\u5C06\u8FD4\u56DE nil\uFF0C\u8868\u660E\u5F53\u524D\u6CA1\u6709\u53EF\u7528\u7684\u5143\u7D20\u3002</li><li>Get\uFF1A\u8C03\u7528\u8BE5\u65B9\u6CD5\uFF0C\u5C31\u4F1A\u4ECE pool \u53D6\u8D70\u4E00\u4E2A\u5143\u7D20\uFF0C\u8BE5\u5143\u7D20\u4F1A\u4ECE pool \u4E2D\u79FB\u9664\uFF0C\u8FD4\u56DE\u7ED9\u8C03\u7528\u8005\u3002<br> \u4E0D\u8FC7\uFF0C\u9664\u4E86\u8FD4\u56DE\u503C\u662F\u6B63\u5E38\u5B9E\u4F8B\u5316\u7684\u5143\u7D20\uFF0CGet \u65B9\u6CD5\u7684\u8FD4\u56DE\u503C\u8FD8\u53EF\u80FD\u4F1A\u662F\u4E00\u4E2A nil(Pool.New \u5B57\u6BB5\u6CA1\u6709\u8BBE\u7F6E\uFF0C\u53C8\u6CA1\u6709\u7A7A\u95F2\u5143\u7D20\u53EF\u4EE5\u8FD4\u56DE)\uFF0C<br> \u6240\u4EE5\u5728\u4F7F\u7528\u7684\u65F6\u5019\uFF0C\u53EF\u80FD\u9700\u8981\u5224\u65AD\u3002</li><li>Put\uFF1A\u5C06\u4E00\u4E2A\u5143\u7D20\u8FD4\u8FD8\u7ED9 pool\uFF0Cpool \u4F1A\u628A\u8FD9\u4E2A\u5143\u7D20\u4FDD\u5B58\u5230\u6C60\u4E2D(\u5185\u90E8\u961F\u5217)\uFF0C\u5E76\u4E14\u53EF\u4EE5\u590D\u7528\u3002<br> \u4F46\u5982\u679C Put \u4E00\u4E2A nil \u503C\uFF0CPool \u5C31\u4F1A\u5FFD\u7565\u8FD9\u4E2A\u503C\u3002</li></ul><h2 id="\u7F13\u5B58\u6C60-bufferpool" tabindex="-1"><a class="header-anchor" href="#\u7F13\u5B58\u6C60-bufferpool" aria-hidden="true">#</a> \u7F13\u5B58\u6C60 bufferPool</h2><p>\u56DE\u5230\u521A\u624D\u7684\u4E1A\u52A1\u573A\u666F\u4E0A\uFF0C\u5B57\u8282\u5207\u7247(byte slice) data \u88AB\u9891\u7E41\u521B\u5EFA\u7136\u540E\u9500\u6BC1\uFF0C<br> \u6D6A\u8D39\u4E86\u5927\u91CF\u5185\u5B58\u3002\u6211\u4EEC\u4F7F\u7528 pool \u6765\u4F18\u5316\u8FD9\u4E9B\u573A\u666F\uFF0C\u5982\u4E0B\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">var</span> bufferPool <span class="token operator">=</span> sync<span class="token punctuation">.</span>Pool<span class="token punctuation">{</span>
    New<span class="token punctuation">:</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">new</span><span class="token punctuation">(</span>bytes<span class="token punctuation">.</span>Buffer<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">GetBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span>bytes<span class="token punctuation">.</span>Buffer <span class="token punctuation">{</span>
    <span class="token keyword">return</span> bufferPool<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token operator">*</span>bytes<span class="token punctuation">.</span>Buffer<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">PutBuffer</span><span class="token punctuation">(</span>buf <span class="token operator">*</span>bytes<span class="token punctuation">.</span>Buffer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    buf<span class="token punctuation">.</span><span class="token function">Reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    bufferPool<span class="token punctuation">.</span><span class="token function">Put</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>\u5B9A\u4E49 <code>bufferPool</code> \u7F13\u5B58\u6C60\uFF0C<code>New</code> \u51FD\u6570\u7528\u4E8E\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684 <code>bytes.Buffer</code>\uFF1B</li><li><code>GetBuffer</code> \u8FD4\u56DE\u6C60\u4E2D\u4E00\u4E2A Buffer\uFF1B</li><li><code>PutBuffer</code> \u5C06 Buffer \u91CD\u65B0\u653E\u5165\u6C60\u4E2D\u3002</li></ol><p>\u8FD9\u6837\u5C31\u8FBE\u5230\u4E86\u5BF9\u8C61\u91CD\u590D\u5229\u7528\u7684\u6548\u679C\uFF0C\u51CF\u5C11\u4E86\u975E\u5FC5\u8981\u5185\u5B58\u7684\u5206\u914D\u3002pool \u7684\u4F7F\u7528\u5C31\u662F\u8FD9\u4E48\u7B80\u5355\uFF0C<br> \u5F53\u7136\uFF0C\u5BF9\u4E8E http \u8BF7\u6C42\u6765\u8BF4\uFF0C\u5982\u679C\u8BF7\u6C42\u4F53\u7684\u5927\u5C0F\u662F\u53EF\u9884\u6D4B\u7684\uFF0C\u5B8C\u5168\u53EF\u4EE5\u5728<code>New</code>\u7684\u65F6\u5019\u9884\u5206\u914D<br> \u8DB3\u591F\u7684\u5207\u7247\u5BB9\u91CF\uFF0C\u5373\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">var</span> bufferPool <span class="token operator">=</span> sync<span class="token punctuation">.</span>Pool<span class="token punctuation">{</span>
    New<span class="token punctuation">:</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> bytes<span class="token punctuation">.</span><span class="token function">NewBuffer</span><span class="token punctuation">(</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token operator">*</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 20KB</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F46\u662F\u8FD9\u6BB5\u4EE3\u7801\u662F\u6709\u95EE\u9898\u7684\uFF0C\u5B83\u4F1A\u4EA7\u751F\u5185\u5B58\u6CC4\u6F0F\u3002\u4EA7\u751F\u5185\u5B58\u6CC4\u6F0F\u7684\u539F\u56E0\u5728\u4E8E pool \u7684\u5177\u4F53\u5B9E\u73B0(\u53EF\u4EE5\u81EA\u884C Google)\uFF0C<br> pool \u4E2D\u7684\u5BF9\u8C61\u901A\u8FC7\u81EA\u5B9A\u4E49 GC \u51FD\u6570<code>poolCleanup</code>\u6765\u5B9E\u73B0\u56DE\u6536\uFF0C\u8BE5\u51FD\u6570\u5728\u4E00\u6B21 GC \u65F6<br> \u4E0D\u4F1A\u5C06\u5BF9\u8C61\u76F4\u63A5 GC \u6389\uFF0C\u800C\u662F\u79FB\u52A8\u5230 <code>victim</code> \u961F\u5217\u4E2D\uFF0C\u4E0B\u6B21\u8FD8\u662F\u53EF\u4EE5\u4F7F\u7528\uFF0C\u4F46\u4E24\u6B21 GC \u4E4B\u540E\u5C31\u88AB\u56DE\u6536\u4E86\u3002</p><p>\u4E3A\u4EC0\u4E48\u4F1A\u6709\u5185\u5B58\u6D6A\u8D39\u3001\u5185\u5B58\u6CC4\u6F0F(\u6837\u4F8B\u89C1\u9644\u5F55 Pool \u5185\u5B58\u6CC4\u6F0F\u6837\u4F8B)\uFF1A</p><ol><li>Get \u65B9\u6CD5\u4ECE\u961F\u5217\u4E2D\u53D6\u5143\u7D20\uFF0C\u672C\u8D28\u4E0A\u662F\u968F\u673A\u7684\uFF1B</li><li>\u5982\u679C\u7F13\u5B58\u4E86\u5F88\u5927\u7684[]byte\uFF0C\u6BD4\u5982 256MB\uFF0C\u90A3\u4E48 pool \u5360\u636E\u4E86\u5F88\u5927\u7684\u5185\u5B58\u5BB9\u91CF\uFF1B</li><li>\u5982\u679C\u540E\u7EED Get \u65B9\u6CD5\u53D6\u51FA\u4E86 256MB \u7684[]byte\uFF0C\u4F46\u5B9E\u9645\u4E0A\u53EA\u4F7F\u7528\u4E86 1KB \u7684\u5C0F\u5185\u5B58\uFF0C\u5C31\u4F1A\u6D6A\u8D39\u5927\u91CF\u7684\u5185\u5B58\uFF1B</li><li>\u7531\u4E8E pool \u7684 GC \u673A\u5236\uFF0C\u4E00\u6B21 GC \u5E76\u4E0D\u4F1A\u76F4\u63A5\u56DE\u6536\uFF0C\u6240\u4EE5\u5C31\u4F1A\u6709\u5927\u91CF\u7684\u5927\u5185\u5B58\u5207\u7247\u5728\u961F\u5217\u4E2D\uFF0C<br> \u53EA\u6709\u4E0B\u6B21 GC \u624D\u80FD\u56DE\u6536\uFF0C\u5C31\u4F1A\u5BFC\u81F4\u5185\u5B58\u6CC4\u6F0F\u3002</li></ol><p>Go fmt \u5305\u4E2D\uFF0C\u4E5F\u8E29\u4E86\u8FD9\u4E2A\u5751\uFF0C\u800C\u4FEE\u590D\u65B9\u6CD5\u4E5F\u5F88\u7B80\u5355\uFF0C\u5F53\u5224\u65AD\u56DE\u6536\u5207\u7247\u5185\u5B58\u8FC7\u5927\u65F6\uFF0C\u76F4\u63A5\u4E22\u5F03\uFF0C\u4E0D\u518D<br> \u8FDB\u5165\u6C60\u4E2D\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">PutBuffer</span><span class="token punctuation">(</span>buf <span class="token operator">*</span>bytes<span class="token punctuation">.</span>Buffer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> buf<span class="token punctuation">.</span><span class="token function">Cap</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">2</span><span class="token operator">*</span><span class="token number">1024</span><span class="token operator">*</span><span class="token number">1024</span> <span class="token punctuation">{</span>
       <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    buf<span class="token punctuation">.</span><span class="token function">Reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    bufferPool<span class="token punctuation">.</span><span class="token function">Put</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,31),r=s("\u603B\u800C\u8A00\u4E4B\uFF0C\u6807\u51C6\u5E93\u4E2D\u7684 pool \u662F\u4E0D\u591F\u597D\u7528\u7684\uFF0C\u56E0\u6B64\u6709\u5F88\u591A\u4E09\u65B9\u5E93\u6765\u89E3\u51B3\u8FD9\u4E9B\u95EE\u9898\uFF0C"),d=n("br",null,null,-1),k=s(" \u6BD4\u5982"),m={href:"https://github.com/vitessio/vitess/blob/main/go/bucketpool/bucketpool.go",target:"_blank",rel:"noopener noreferrer"},b=s("bucketpool"),v=n("br",null,null,-1),f=s(" \u63D0\u4F9B\u4E86\u591A\u5C42\u7EA7\u7684 pool \u5B9E\u73B0\uFF0C\u6309\u7167\u8F93\u5165\u7684\u5C3A\u5BF8\u5927\u5C0F\u6765\u8FD4\u56DE\u5408\u9002\u7684 pool\uFF1A"),h=e(`<div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// Get returns pointer to []byte which has len size.</span>
<span class="token comment">// If there is no bucket with buffers &gt;= size, slice will be allocated.</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>p <span class="token operator">*</span>Pool<span class="token punctuation">)</span> <span class="token function">Get</span><span class="token punctuation">(</span>size <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">*</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span> <span class="token punctuation">{</span>
	sp <span class="token operator">:=</span> p<span class="token punctuation">.</span><span class="token function">findPool</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span>
	<span class="token keyword">if</span> sp <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token function">makeSlicePointer</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	buf <span class="token operator">:=</span> sp<span class="token punctuation">.</span>pool<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">)</span>
	<span class="token operator">*</span>buf <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>buf<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span>size<span class="token punctuation">]</span>
	<span class="token keyword">return</span> buf
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u8FDE\u63A5\u6C60-connpool" tabindex="-1"><a class="header-anchor" href="#\u8FDE\u63A5\u6C60-connpool" aria-hidden="true">#</a> \u8FDE\u63A5\u6C60 connPool</h2><p>\u5BF9\u4E8E\u8FDE\u63A5\u6C60\u800C\u8A00\uFF0Csync.Pool \u81EA\u7136\u5C31\u4E0D\u518D\u9002\u7528\u4E86\uFF0C\u8FDE\u63A5\u6C60\u7684\u4F5C\u7528\u5C31\u5728\u4E8E\u80FD\u591F\u4E00\u76F4\u4FDD\u6301\u8FDE\u63A5\uFF0C<br> \u5728\u9700\u8981\u4F7F\u7528\u7684\u65F6\u5019\u65E0\u9700\u518D\u6B21\u521B\u5EFA\u3001\u63E1\u624B\u3001\u8BA4\u8BC1\uFF0C\u7701\u6389\u4E86\u4E00\u7CFB\u5217\u7684\u6B65\u9AA4\uFF0C\u5C31\u80FD\u76F4\u63A5\u4F7F\u7528\u3002</p><p>\u8FDE\u63A5\u6C60\u5728 Go \u7684\u6807\u51C6\u5E93\u4E2D\uFF0C\u4E5F\u5728\u5927\u91CF\u4F7F\u7528\u3002\u6BD4\u5982 http.Client \u5C31\u901A\u8FC7 <code>map</code> \u7F13\u5B58\u4E86\u4E00\u5B9A<br> \u6570\u91CF\u7684 http \u8FDE\u63A5\uFF0C\u5982\u4E0B\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> Transport <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	idleMu       sync<span class="token punctuation">.</span>Mutex
	closeIdle    <span class="token builtin">bool</span>                                <span class="token comment">// user has requested to close all idle conns</span>
	idleConn     <span class="token keyword">map</span><span class="token punctuation">[</span>connectMethodKey<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">*</span>persistConn <span class="token comment">// most recently used at end</span>
	idleConnWait <span class="token keyword">map</span><span class="token punctuation">[</span>connectMethodKey<span class="token punctuation">]</span>wantConnQueue  <span class="token comment">// waiting getConns</span>
	idleLRU      connLRU

	reqMu       sync<span class="token punctuation">.</span>Mutex
	reqCanceler <span class="token keyword">map</span><span class="token punctuation">[</span>cancelKey<span class="token punctuation">]</span><span class="token keyword">func</span><span class="token punctuation">(</span><span class="token builtin">error</span><span class="token punctuation">)</span>
	<span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728 sql.DB \u4E2D\uFF0CGo \u4E5F\u63D0\u4F9B\u4E86\u4E00\u4E2A\u901A\u7528\u7684\u6570\u636E\u5E93\u8FDE\u63A5\u6C60\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> DB <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	<span class="token comment">// Atomic access only. At top of struct to prevent mis-alignment</span>
	<span class="token comment">// on 32-bit platforms. Of type time.Duration.</span>
	waitDuration <span class="token builtin">int64</span> <span class="token comment">// Total time waited for new connections.</span>

	connector driver<span class="token punctuation">.</span>Connector
	<span class="token comment">// numClosed is an atomic counter which represents a total number of</span>
	<span class="token comment">// closed connections. Stmt.openStmt checks it before cleaning closed</span>
	<span class="token comment">// connections in Stmt.css.</span>
	numClosed <span class="token builtin">uint64</span>

	mu           sync<span class="token punctuation">.</span>Mutex    <span class="token comment">// protects following fields</span>
	freeConn     <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">*</span>driverConn <span class="token comment">// free connections ordered by returnedAt oldest to newest</span>
	connRequests <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">uint64</span><span class="token punctuation">]</span><span class="token keyword">chan</span> connRequest
	<span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>freeConn</code> \u5B57\u6BB5\u7528\u6765\u7F13\u5B58\u6570\u636E\u5E93\u8FDE\u63A5\uFF0C\u5F53\u9700\u8981\u8BBF\u95EE\u6570\u636E\u7684\u65F6\u5019\uFF0C\u62FF\u6765\u5373\u7528\uFF0C\u53E6\u5916\u8FD8\u63D0\u4F9B\u4E86<br> API \u6765\u8BBE\u7F6E\u7A7A\u95F2\u8FDE\u63A5\u6570\u7684\u5927\u5C0F\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>db <span class="token operator">*</span>DB<span class="token punctuation">)</span> <span class="token function">SetMaxIdleConns</span><span class="token punctuation">(</span>n <span class="token builtin">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>db <span class="token operator">*</span>DB<span class="token punctuation">)</span> <span class="token function">SetMaxOpenConns</span><span class="token punctuation">(</span>n <span class="token builtin">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// ...so on</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),g=s("\u53E6\u5916\u8FD8\u6709\u4E00\u4E9B\u8FDE\u63A5\u4F7F\u7528\u7684\u662F TCP \u534F\u8BAE\uFF0C\u8FD9\u5C31\u9700\u8981\u4E09\u65B9\u5E93\u7684\u652F\u6301\u4E86\uFF0C\u6BD4\u5982"),_={href:"https://github.com/fatih/pool",target:"_blank",rel:"noopener noreferrer"},y=s("fatih/pool"),w=n("br",null,null,-1),P=s(" \u5C31\u662F\u4E00\u79CD TCP \u8FDE\u63A5\u6C60\u7684\u5B9E\u73B0\uFF0C\u4E0D\u8FC7\u5B83\u7684\u5B9E\u73B0\u7565\u6709\u4E0D\u540C\uFF0C\u91C7\u7528 channel \u6765\u7F13\u5B58\u8FDE\u63A5\uFF1A"),C=e(`<div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// PoolConn is a wrapper around net.Conn to modify the the behavior of</span>
<span class="token comment">// net.Conn&#39;s Close() method.</span>
<span class="token keyword">type</span> PoolConn <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	net<span class="token punctuation">.</span>Conn
	mu       sync<span class="token punctuation">.</span>RWMutex
	c        <span class="token operator">*</span>channelPool
	unusable <span class="token builtin">bool</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FDE\u63A5\u6C60\u7684\u4F7F\u7528\u592A\u9891\u7E41\uFF0C\u4EE5\u81F3\u4E8E\u5F88\u591A\u4EBA\u90FD\u5FD8\u8BB0\u4E86\u5B83\u7684\u5B58\u5728\u3002</p><h2 id="\u534F\u7A0B\u6C60-goroutinepool" tabindex="-1"><a class="header-anchor" href="#\u534F\u7A0B\u6C60-goroutinepool" aria-hidden="true">#</a> \u534F\u7A0B\u6C60 goroutinePool</h2><p>\u719F\u6089\u5176\u5B83\u8BED\u8A00\u7684\u540C\u5B66\u80AF\u5B9A\u77E5\u9053\uFF0C\u5728\u4E1A\u52A1\u4E2D\u4F1A\u5927\u91CF\u5730\u4F7F\u7528<code>\u7EBF\u7A0B\u6C60</code>\uFF0C\u4F46\u662F Go \u5C06\u7EBF\u7A0B\u5B8C\u7F8E\u7684\u5C01\u88C5\u4E86\u8D77\u6765\uFF0C<br> \u5E76\u63D0\u4F9B\u4E86 go \u5173\u952E\u5B57\u6765\u76F4\u63A5\u5F00\u8F9F\u534F\u7A0B\uFF0C\u867D\u7136\u534F\u7A0B\u76F8\u5BF9\u8F7B\u91CF\uFF0C\u5F00\u542F\u51E0\u4E07\u4E2A\u4E43\u81F3\u5341\u4E07\u4E2A\u90FD\u6CA1\u5565\u95EE\u9898\uFF0C\u4F46\u6BCF\u6B21<br> \u8BF7\u6C42\u6765\u65F6\u5F00\u542F\u534F\u7A0B\uFF0C\u8BF7\u6C42\u5B8C\u540E\u534F\u7A0B\u53C8\u5F97\u56DE\u6536\uFF0C\u8FD9\u4E5F\u662F\u4E00\u79CD\u534F\u7A0B\u8D44\u6E90\u7684\u6D6A\u8D39\u3002</p><p>\u5E76\u4E14\uFF0C\u5982\u6B64\u5927\u91CF\u7684\u534F\u7A0B\u7684\u521B\u5EFA\u4E5F\u7ED9\u8C03\u5EA6\u5668\u5E26\u6765\u4E86\u6781\u5927\u7684\u538B\u529B\uFF0C\u56E0\u6B64\u53C2\u8003\u7EBF\u7A0B\u6C60\u7684\u4F7F\u7528\u65B9\u5F0F\uFF0C\u6211\u4EEC\u4E5F\u53EF\u4EE5<br> \u6765\u4F7F\u7528\u534F\u7A0B\u6C60\u3002</p>`,5),G={href:"https://github.com/panjf2000/ants",target:"_blank",rel:"noopener noreferrer"},x=s("ants"),B=s(" \u662F\u4E09\u65B9\u7684\u4E00\u4E2A\u9AD8\u6027\u80FD\u3001\u4F4E\u635F\u8017\u7684 goroutine \u6C60\u5E93\uFF0C"),S=n("br",null,null,-1),q=s(" \u63D0\u4F9B\u4E86\u7B80\u5355\u6613\u7528\u7684 API\uFF0C\u5982\u4E0B\uFF1A"),M=e(`<div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// Set 10000 the size of goroutine pool</span>
p<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> ants<span class="token punctuation">.</span><span class="token function">NewPool</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">)</span>
p<span class="token punctuation">.</span><span class="token function">Submit</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u534F\u7A0B\u6C60\u6700\u591A\u53EA\u80FD\u6709 10000 \u4E2A goroutine\uFF0C\u5F53\u63D0\u4EA4\u7684\u4EFB\u52A1\u8FC7\u591A\u5219\u4F1A\u65B0\u5EFA goroutine\uFF0C<br> \u5F53\u6709\u5927\u91CF goroutine \u7A7A\u95F2\u65F6\uFF0Cpool \u4F1A\u91CA\u653E\u6389\u4E00\u6279 goroutine \u6765\u4FDD\u8BC1\u5185\u5B58\u3002</p>`,2),N=s("\u5173\u4E8E goroutine pool \u7684\u5B9E\u73B0\uFF0Cants \u7684\u4F5C\u8005\u6709\u4E00\u7BC7\u4ECB\u7ECD\u5176\u5B9E\u73B0\u7684"),R={href:"https://strikefreedom.top/high-performance-implementation-of-goroutine-pool",target:"_blank",rel:"noopener noreferrer"},z=s("\u6587\u7AE0"),A=s("\uFF0C"),I=n("br",null,null,-1),T=s(" \u611F\u5174\u8DA3\u7684\u540C\u5B66\u53EF\u4EE5\u53C2\u8003\u53C2\u8003\u3002"),D=e('<p>\u5F53\u7136 goroutine pool \u7684\u5B9E\u73B0\u8FD8\u6709\u5F88\u591A\uFF0C\u5B83\u4EEC\u7279\u6027\u5404\u5F02\uFF0C\u5404\u6709\u4F18\u7F3A\u70B9\uFF0C\u53EF\u4EE5\u9009\u62E9\u9002\u5408\u81EA\u5DF1\u4E1A\u52A1\u7684\u6765\u4F7F\u7528\u3002</p><p>\u6BD4\u5982\uFF1A</p><ul><li>gammazero/workerpool\uFF1A\u53EF\u4EE5\u65E0\u9650\u5236\u5730\u63D0\u4EA4\u4EFB\u52A1\uFF0C\u63D0\u4F9B\u4E86\u66F4\u4FBF\u5229\u7684 Submit \u548C SubmitWait \u65B9\u6CD5\u63D0\u4EA4\u4EFB\u52A1\uFF0C<br> \u8FD8\u53EF\u4EE5\u63D0\u4F9B\u5F53\u524D\u7684 worker \u6570\u548C\u4EFB\u52A1\u6570\u4EE5\u53CA\u5173\u95ED Pool \u7684\u529F\u80FD\u3002</li><li>ivpusic/grpool\uFF1A\u63D0\u4F9B Worker \u7684\u6570\u91CF\u548C\u7B49\u5F85\u6267\u884C\u7684\u4EFB\u52A1\u7684\u6700\u5927\u6570\u91CF\uFF0C\u4EFB\u52A1\u7684\u63D0\u4EA4\u662F\u76F4\u63A5\u5F80 Channel \u653E\u5165\u4EFB\u52A1\u3002</li><li>dpaks/goworkers\uFF1A\u63D0\u4F9B\u4E86\u66F4\u4FBF\u5229\u7684 Submit \u65B9\u6CD5\u63D0\u4EA4\u4EFB\u52A1\u4EE5\u53CA Worker \u6570\u3001\u4EFB\u52A1\u6570\u7B49\u67E5\u8BE2\u65B9\u6CD5\u3001\u5173\u95ED Pool \u7684\u65B9\u6CD5\u3002</li><li>so on...</li></ul><h2 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h2><p>\u81F3\u6B64\uFF0C\u5173\u4E8E\u5728 Go \u4E2D\uFF0C\u6C60\u5316\u7684\u4E09\u79CD\u65B9\u5F0F\u5747\u4EE5\u4ECB\u7ECD\u5B8C\u6BD5\u3002</p><p>\u6C60\u5316\u51E0\u4E4E\u53EF\u4EE5\u4F5C\u4E3A\u6027\u80FD\u3001\u5185\u5B58\u4F18\u5316\u65B9\u6848\u4E2D\u6700\u5E38\u89C1\u7684\u4E00\u79CD\u4E86\uFF0C\u5E0C\u671B\u4E0B\u6B21\u9047\u5230\u6027\u80FD\u95EE\u9898\u65F6\uFF0C<br> \u6211\u4EEC\u90FD\u80FD\u591F\u7CBE\u51C6\u611F\u77E5\u7CFB\u7EDF\u5DF2\u6709\u7684\u6C60\u5316\u65B9\u6848\uFF0C\u5E76\u80FD\u5728\u65B0\u7684\u5730\u65B9\u4F7F\u7528\u5408\u9002\u7684\u6C60\u5316\u65B9\u6848\u3002</p><h2 id="\u53C2\u8003\u8D44\u6599" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u8D44\u6599" aria-hidden="true">#</a> \u53C2\u8003\u8D44\u6599</h2>',7),K={href:"https://github.com/fatih/pool",target:"_blank",rel:"noopener noreferrer"},L=s("https://github.com/fatih/pool"),V={href:"https://www.cnblogs.com/qcrao-2018/p/12736031.html",target:"_blank",rel:"noopener noreferrer"},W=s("https://www.cnblogs.com/qcrao-2018/p/12736031.html"),j={href:"https://colobu.com/2019/10/08/how-is-sync-Pool-improved-in-Go-1-13/",target:"_blank",rel:"noopener noreferrer"},E=s("https://colobu.com/2019/10/08/how-is-sync-Pool-improved-in-Go-1-13/"),U={href:"https://marksuper.xyz/2021/09/02/sync_pool/",target:"_blank",rel:"noopener noreferrer"},O=s("https://marksuper.xyz/2021/09/02/sync_pool/"),H={href:"https://github.com/panjf2000/ants",target:"_blank",rel:"noopener noreferrer"},Q=s("https://github.com/panjf2000/ants"),F={href:"https://strikefreedom.top/high-performance-implementation-of-goroutine-pool",target:"_blank",rel:"noopener noreferrer"},J=s("https://strikefreedom.top/high-performance-implementation-of-goroutine-pool"),X=e(`<h2 id="\u9644\u5F55" tabindex="-1"><a class="header-anchor" href="#\u9644\u5F55" aria-hidden="true">#</a> \u9644\u5F55</h2><h3 id="pool-\u5185\u5B58\u6CC4\u6F0F\u6837\u4F8B" tabindex="-1"><a class="header-anchor" href="#pool-\u5185\u5B58\u6CC4\u6F0F\u6837\u4F8B" aria-hidden="true">#</a> Pool \u5185\u5B58\u6CC4\u6F0F\u6837\u4F8B</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>pool <span class="token operator">:=</span> sync<span class="token punctuation">.</span>Pool<span class="token punctuation">{</span>New<span class="token punctuation">:</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token function">new</span><span class="token punctuation">(</span>bytes<span class="token punctuation">.</span>Buffer<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>

processRequest <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>size <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    b <span class="token operator">:=</span> pool<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token operator">*</span>bytes<span class="token punctuation">.</span>Buffer<span class="token punctuation">)</span>    <span class="token comment">// Get \u4ECE\u961F\u5217\u91CC\u9762\u62FF\uFF0C\u5B9E\u9645\u4E0A\u662F\u968F\u673A\u7684</span>
    time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">500</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Millisecond<span class="token punctuation">)</span> <span class="token comment">// Simulate processing time</span>
    b<span class="token punctuation">.</span><span class="token function">Grow</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span>                       <span class="token comment">// \u6269\u5BB9\u540E\u518Dput</span>

    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;buffer size: %d, cap: %d\\n&quot;</span><span class="token punctuation">,</span> b<span class="token punctuation">.</span><span class="token function">Len</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> b<span class="token punctuation">.</span><span class="token function">Cap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;address of buffer %p\\n&quot;</span><span class="token punctuation">,</span> b<span class="token punctuation">)</span>

    pool<span class="token punctuation">.</span><span class="token function">Put</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>
    time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Millisecond<span class="token punctuation">)</span> <span class="token comment">// Simulate idle time</span>
<span class="token punctuation">}</span>

<span class="token comment">// Simulate a set of initial large writes.</span>
<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
    <span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">processRequest</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">28</span><span class="token punctuation">)</span> <span class="token comment">// 256MiB</span>
    <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span> <span class="token comment">// Let the initial set finish</span>

<span class="token comment">// Simulate an un-ending series of small writes.</span>
<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
    <span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">{</span>
            <span class="token function">processRequest</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token comment">// 1KiB</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// Continually run a GC and track the allocated bytes.</span>
<span class="token comment">// 40 Cycles \u624D\u88AB\u5B8C\u5168 free</span>
<span class="token keyword">var</span> stats runtime<span class="token punctuation">.</span>MemStats
<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
    runtime<span class="token punctuation">.</span><span class="token function">ReadMemStats</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>stats<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Cycle %d: %dMB\\n&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> stats<span class="token punctuation">.</span>Alloc<span class="token operator">/</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token operator">*</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>
    runtime<span class="token punctuation">.</span><span class="token function">GC</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3);function Y(Z,$){const a=p("ExternalLinkIcon");return c(),l("div",null,[u,n("p",null,[r,d,k,n("a",m,[b,t(a)]),v,f]),h,n("p",null,[g,n("a",_,[y,t(a)]),w,P]),C,n("p",null,[n("a",G,[x,t(a)]),B,S,q]),M,n("p",null,[N,n("a",R,[z,t(a)]),A,I,T]),D,n("ul",null,[n("li",null,[n("a",K,[L,t(a)])]),n("li",null,[n("a",V,[W,t(a)])]),n("li",null,[n("a",j,[E,t(a)])]),n("li",null,[n("a",U,[O,t(a)])]),n("li",null,[n("a",H,[Q,t(a)])]),n("li",null,[n("a",F,[J,t(a)])])]),X])}var an=o(i,[["render",Y],["__file","pool.html.vue"]]);export{an as default};
