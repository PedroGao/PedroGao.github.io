import{_ as e}from"./plugin-vue_export-helper.21dcd24c.js";import{r as c,o,c as i,a as n,d as t,e as p,b as s}from"./app.034de530.js";var l="/imgs/asm2asm.png";const u={},r=p(`<h1 id="go-\u7684\u4E24\u4E2A\u9ED1\u9B54\u6CD5\u6280\u5DE7" tabindex="-1"><a class="header-anchor" href="#go-\u7684\u4E24\u4E2A\u9ED1\u9B54\u6CD5\u6280\u5DE7" aria-hidden="true">#</a> go \u7684\u4E24\u4E2A\u9ED1\u9B54\u6CD5\u6280\u5DE7</h1><p>\u6700\u8FD1\uFF0C\u5728\u5199 Go \u4EE3\u7801\u7684\u65F6\u5019\uFF0C\u53D1\u73B0\u4E86\u5176\u7279\u522B\u6709\u610F\u601D\u7684<strong>\u4E24\u4E2A</strong>\u5947\u6280\u6DEB\u5DE7\uFF0C\u4E8E\u662F\u5199\u4E0B\u8FD9\u7BC7<br> \u6587\u7AE0\u548C\u5927\u5BB6\u5206\u4EAB\u4E00\u4E0B\u3002</p><h2 id="\u9B54\u6CD5-1-\u8C03\u7528-runtime-\u4E2D\u7684\u79C1\u6709\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u9B54\u6CD5-1-\u8C03\u7528-runtime-\u4E2D\u7684\u79C1\u6709\u51FD\u6570" aria-hidden="true">#</a> \u9B54\u6CD5 1\uFF1A\u8C03\u7528 runtime \u4E2D\u7684\u79C1\u6709\u51FD\u6570</h2><p>\u6309\u7167 Go \u7684\u7F16\u8BD1\u7EA6\u5B9A\uFF0C\u4EE3\u7801\u5305\u5185\u4EE5<strong>\u5C0F\u5199\u5B57\u6BCD</strong>\u5F00\u5934\u7684\u51FD\u6570\u3001\u53D8\u91CF\u662F\u79C1\u6709\u7684\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> test

<span class="token comment">// \u79C1\u6709</span>
<span class="token keyword">func</span> <span class="token function">abs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token comment">// \u516C\u5171</span>
<span class="token keyword">func</span> <span class="token function">Abs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BF9\u4E8E <code>test</code> \u5305\u4E2D <code>abs</code> \u51FD\u6570\u53EA\u80FD\u5728\u5305\u5185\u8C03\u7528\uFF0C\u800C <code>Abs</code> \u51FD\u6570\u5374\u53EF\u4EE5\u5728\u5176\u5B83\u5305\u4E2D<br> \u5BFC\u5165\u540E\u4F7F\u7528\u3002</p><p>\u79C1\u6709\u53D8\u91CF\u3001\u65B9\u6CD5\u7684\u610F\u4E49\u5728\u4E8E<strong>\u5C01\u88C5</strong>\uFF1A\u63A7\u5236\u5185\u90E8\u6570\u636E\u3001\u4FDD\u8BC1\u5916\u90E8\u4EA4\u4E92\u7684\u4E00\u81F4\u6027\u3002</p><p>\u8FD9\u6837\u65E2\u80FD\u4FC3\u8FDB\u7CFB\u7EDF\u8FD0\u884C\u7684\u53EF\u9760\u6027\uFF0C\u4E5F\u80FD\u51CF\u5C11\u4F7F\u7528\u8005\u7684\u4FE1\u606F\u8D1F\u8F7D\u3002</p><p>\u8FD9\u6837\u7684\u89C4\u5B9A\u5BF9\u8BBE\u8BA1\u3001\u5C01\u88C5\u826F\u597D\u7684\u5305\u662F\u53CB\u597D\u7684\uFF0C\u4F46\u5E76\u4E0D\u662F\u6BCF\u4E2A\u4EBA\u90FD\u6709\u8FD9\u6837\u7684\u80FD\u529B\uFF0C\u53E6\u5916<br> \u5BF9\u4E8E\u4E00\u4E9B\u7279\u6B8A\u7684\u51FD\u6570\uFF0C\u5982\uFF1A<code>runtime</code> \u4E2D\u7684 <code>memmove</code> \u51FD\u6570\uFF0C\u5728\u6709\u4E9B\u573A\u666F\u4E0B\uFF0C\u786E\u5B9E\u662F\u9700\u8981\u7684\u3002</p><p>\u56E0\u6B64 Go \u5728\u7A0B\u5E8F\u94FE\u63A5\u9636\u6BB5\u7ED9\u5F00\u53D1\u8005\u6253\u5F00\u4E86\u4E00\u6247\u7A97\uFF0C\u5373\u53EF\u4EE5\u901A\u8FC7 <code>go:linkname</code> \u6307\u4EE4\u6765<br> \u94FE\u63A5\u5305\u5185\u7684\u79C1\u6709\u51FD\u6570\u3002</p><h3 id="memmove" tabindex="-1"><a class="header-anchor" href="#memmove" aria-hidden="true">#</a> memmove</h3>`,11),k=s("\u4EE5 "),d={href:"https://github.com/golang/go/blob/1724077b789ad92972ab1ac03788389645306cbb/src/runtime/stubs.go#L111",target:"_blank",rel:"noopener noreferrer"},v=s("memmove"),m=s(" \u4E3A\u4F8B\uFF0C"),b=n("br",null,null,-1),h=s(" \u5982\u4E0B\uFF1A"),g=p(`<div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">memmove</span><span class="token punctuation">(</span>to<span class="token punctuation">,</span> from unsafe<span class="token punctuation">.</span>Pointer<span class="token punctuation">,</span> n <span class="token builtin">uintptr</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>memmove \u4F5C\u4E3A runtime \u4E2D\u7684\u79C1\u6709\u51FD\u6570\uFF0C\u7528\u4E8E\u4EFB\u610F\u6570\u636E\u4E4B\u95F4\u7684\u5185\u5B58\u62F7\u8D1D\uFF0C\u65E0\u89C6\u7C7B\u578B\u4FE1\u606F\uFF0C\u76F4\u63A5\u64CD\u4F5C<br> \u5185\u5B58\uFF0C\u8FD9\u6837\u7684\u64CD\u4F5C\u5728 Go \u4E2D\u867D\u7136\u662F\u4E0D\u63D0\u5021\u7684\uFF0C\u4F46\u662F\u7528\u597D\u4E86\uFF0C\u5374\u4E5F\u662F\u4E00\u628A\u5229\u5203\u3002</p><p>\u65B0\u5EFA\u4E00\u4E2A go \u6587\u4EF6\uFF0C\u5982 runtime.go\uFF0C\u5E76\u52A0\u4E0A\u5982\u4E0B\u5185\u5BB9\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">//go:noescape</span>
<span class="token comment">//go:linkname memmove runtime.memmove</span>
<span class="token comment">//goland:noinspection GoUnusedParameter</span>
<span class="token keyword">func</span> <span class="token function">memmove</span><span class="token punctuation">(</span>to unsafe<span class="token punctuation">.</span>Pointer<span class="token punctuation">,</span> from unsafe<span class="token punctuation">.</span>Pointer<span class="token punctuation">,</span> n <span class="token builtin">uintptr</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u628A\u89C6\u89D2\u653E\u5230 <code>go:linkname</code> \u6307\u4EE4\u4E0A\uFF0C\u8BE5\u6307\u4EE4\u63A5\u53D7\u4E24\u4E2A\u53C2\u6570\uFF1A</p><ul><li>memmove\uFF1A\u5F53\u524D\u51FD\u6570\u540D\u79F0\uFF1B</li><li>runtime.memmove\uFF1A\u5BF9\u5E94\u94FE\u63A5\u7684\u51FD\u6570\u7684\u8DEF\u5F84\uFF0C\u62A5\u540D+\u51FD\u6570\u540D\u3002</li></ul><p>\u8FD9\u6837\uFF0C\u7F16\u8BD1\u5668\u5728\u505A\u94FE\u63A5\u65F6\u5C31\u4F1A\u5C06\u5F53\u524D\u7684 memmove \u51FD\u6570\u94FE\u63A5\u5230 runtime \u4E2D\u7684 memmove \u51FD\u6570\uFF0C \u6211\u4EEC\u5C31\u80FD\u4F7F\u7528\u8BE5\u51FD\u6570\u4E86\u3002</p><p>\u5728\u5E73\u5E38\u5199\u4EE3\u7801\u7684\u65F6\u5019\uFF0C\u6211\u4EEC\u7ECF\u5E38\u6027\u5730\u9700\u8981\u62F7\u8D1D\u5B57\u8282\u5207\u7247\u3001\u5B57\u7B26\u4E32\u4E4B\u95F4\u7684\u6570\u636E\u3002\u6BD4\u5982\u5C06\u6570\u636E\u4ECE\u5207\u7247 1<br> \u62F7\u8D1D\u5230\u5207\u7247 2\uFF0C\u4F7F\u7528 memmove \u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// runtime.go</span>
<span class="token keyword">type</span> GoSlice <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    Ptr unsafe<span class="token punctuation">.</span>Pointer
    Len <span class="token builtin">int</span>
    Cap <span class="token builtin">int</span>
<span class="token punctuation">}</span>

<span class="token comment">// runtime_test.go</span>
<span class="token keyword">func</span> <span class="token function">Test_memmove</span><span class="token punctuation">(</span>t <span class="token operator">*</span>testing<span class="token punctuation">.</span>T<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	src <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">}</span>
	dest <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>

	spew<span class="token punctuation">.</span><span class="token function">Dump</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span>
	spew<span class="token punctuation">.</span><span class="token function">Dump</span><span class="token punctuation">(</span>dest<span class="token punctuation">)</span>

	srcp <span class="token operator">:=</span> <span class="token punctuation">(</span><span class="token operator">*</span>GoSlice<span class="token punctuation">)</span><span class="token punctuation">(</span>unsafe<span class="token punctuation">.</span><span class="token function">Pointer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>src<span class="token punctuation">)</span><span class="token punctuation">)</span>
	destp <span class="token operator">:=</span> <span class="token punctuation">(</span><span class="token operator">*</span>GoSlice<span class="token punctuation">)</span><span class="token punctuation">(</span>unsafe<span class="token punctuation">.</span><span class="token function">Pointer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>dest<span class="token punctuation">)</span><span class="token punctuation">)</span>

	<span class="token function">memmove</span><span class="token punctuation">(</span>destp<span class="token punctuation">.</span>Ptr<span class="token punctuation">,</span> srcp<span class="token punctuation">.</span>Ptr<span class="token punctuation">,</span> unsafe<span class="token punctuation">.</span><span class="token function">Sizeof</span><span class="token punctuation">(</span><span class="token function">byte</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">6</span><span class="token punctuation">)</span>

	spew<span class="token punctuation">.</span><span class="token function">Dump</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span>
	spew<span class="token punctuation">.</span><span class="token function">Dump</span><span class="token punctuation">(</span>dest<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B57\u8282\u5207\u7247([]byte)\u5728\u5185\u5B58\u4E2D\u7684\u5F62\u6001\u5982 <code>GoSlice</code> \u7ED3\u6784\u4F53\u6765\u6240\u793A\uFF0C<code>Len</code>\u3001<code>Cap</code> \u5206\u522B\u8868\u793A\u5207\u7247\u957F\u5EA6\u3001\u5BB9\u91CF\uFF0C\u5B57\u6BB5 <code>Ptr</code> \u6307\u5411\u771F\u5B9E\u7684\u5B57\u8282\u6570\u636E\u3002</p><p>\u5C06\u4E24\u4E2A\u5207\u7247\u7684\u6570\u636E\u6307\u9488\u4EE5\u53CA\u62F7\u8D1D\u957F\u5EA6\u4F5C\u4E3A\u53C2\u6570\u4F20\u5165 memmove\uFF0C\u6570\u636E\u5C31\u80FD\u4ECE src \u62F7\u8D1D\u5230 dest\u3002\u8FD0\u884C\u7ED3\u679C\u5982\u4E0B\uFF1A</p><div class="language-s ext-s line-numbers-mode"><pre class="language-s"><code>=== RUN   Test_memmove
# \u62F7\u8D1D\u4E4B\u524D
([]uint8) (len=6 cap=6) {
 00000000  01 02 03 04 05 06                                 |......|
}
([]uint8) (len=10 cap=10) {
 00000000  00 00 00 00 00 00 00 00  00 00                    |..........|
}
# \u62F7\u8D1D\u4E4B\u540E
([]uint8) (len=6 cap=6) {
 00000000  01 02 03 04 05 06                                 |......|
}
([]uint8) (len=10 cap=10) {
 00000000  01 02 03 04 05 06 00 00  00 00                    |..........|
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u663E\u7136\uFF0C\u5BF9\u4E8E\u5207\u7247\u4E4B\u95F4\u7684\u6570\u636E\u62F7\u8D1D\uFF0C\u6807\u51C6\u5E93\u63D0\u4F9B\u7684 <code>copy</code> \u51FD\u6570\u8981\u66F4\u52A0\u65B9\u4FBF\u4E00\u4E9B\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">Test_copy</span><span class="token punctuation">(</span>t <span class="token operator">*</span>testing<span class="token punctuation">.</span>T<span class="token punctuation">)</span> <span class="token punctuation">{</span>
src <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">}</span>
dest <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>

	spew<span class="token punctuation">.</span><span class="token function">Dump</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span>
	spew<span class="token punctuation">.</span><span class="token function">Dump</span><span class="token punctuation">(</span>dest<span class="token punctuation">)</span>

	<span class="token function">copy</span><span class="token punctuation">(</span>dest<span class="token punctuation">,</span> src<span class="token punctuation">)</span>

	spew<span class="token punctuation">.</span><span class="token function">Dump</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span>
	spew<span class="token punctuation">.</span><span class="token function">Dump</span><span class="token punctuation">(</span>dest<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u6837\u4E5F\u80FD\u8FBE\u5230\u4E00\u6837\u7684\u6548\u679C\uFF0Cmemmove \u66F4\u52A0\u9002\u5408\u5B57\u7B26\u4E32(string)\u548C\u6570\u7EC4\u5207\u7247\u4E4B\u95F4\u7684\u6570\u636E\u62F7\u8D1D\u573A\u666F\uFF0C\u5982\u4E0B\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// runtime.go</span>
<span class="token keyword">type</span> GoString <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    Ptr unsafe<span class="token punctuation">.</span>Pointer
    Len <span class="token builtin">int</span>
<span class="token punctuation">}</span>

<span class="token comment">// runtime_test.go</span>
<span class="token keyword">func</span> <span class="token function">Test_memmove</span><span class="token punctuation">(</span>t <span class="token operator">*</span>testing<span class="token punctuation">.</span>T<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	str <span class="token operator">:=</span> <span class="token string">&quot;pedro&quot;</span>
	<span class="token comment">// \u6CE8\u610F\uFF1A\u8FD9\u91CC\u7684len\u4E0D\u80FD\u4E3A0\uFF0C\u5426\u5219\u6570\u636E\u6CA1\u6709\u5206\u914D\uFF0C\u5C31\u65E0\u6CD5\u590D\u5236</span>
	data <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>
	spew<span class="token punctuation">.</span><span class="token function">Dump</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>
	spew<span class="token punctuation">.</span><span class="token function">Dump</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>

	<span class="token function">memmove</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">*</span>GoSlice<span class="token punctuation">)</span><span class="token punctuation">(</span>unsafe<span class="token punctuation">.</span><span class="token function">Pointer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Ptr<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">*</span>GoString<span class="token punctuation">)</span><span class="token punctuation">(</span>unsafe<span class="token punctuation">.</span><span class="token function">Pointer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Ptr<span class="token punctuation">,</span>
		unsafe<span class="token punctuation">.</span><span class="token function">Sizeof</span><span class="token punctuation">(</span><span class="token function">byte</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">5</span><span class="token punctuation">)</span>
	spew<span class="token punctuation">.</span><span class="token function">Dump</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>
	spew<span class="token punctuation">.</span><span class="token function">Dump</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7C7B\u4F3C\u5730\uFF0C<code>GoString</code> \u662F\u5B57\u7B26\u4E32\u5728\u5185\u5B58\u4E2D\u7684\u8868\u8FBE\u5F62\u6001\uFF0C\u901A\u8FC7 memmove \u51FD\u6570\u5C31\u80FD\u5FEB\u901F\u7684\u5C06\u5B57\u7B26\u6570\u636E\u4ECE<br> \u5B57\u7B26\u4E32\u62F7\u8D1D\u5230\u5207\u7247\uFF0C\u53CD\u4E4B\u4EA6\u7136\uFF0C\u8FD0\u884C\u7ED3\u679C\u5982\u4E0B\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># \u62F7\u8D1D\u4E4B\u524D
(string) (len=5) &quot;pedro&quot;
([]uint8) (len=10 cap=10) {
 00000000  00 00 00 00 00 00 00 00  00 00                    |..........|
}
# \u62F7\u8D1D\u4E4B\u540E
(string) (len=5) &quot;pedro&quot;
([]uint8) (len=10 cap=10) {
 00000000  70 65 64 72 6f 00 00 00  00 00                    |pedro.....|
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="growslice" tabindex="-1"><a class="header-anchor" href="#growslice" aria-hidden="true">#</a> growslice</h3>`,19),_=s("\u5207\u7247\u662F Go \u4E2D\u6700\u5E38\u7528\u7684\u6570\u636E\u7ED3\u6784\u4E4B\u4E00\uFF0C\u5BF9\u4E8E\u5207\u7247\u6269\u5BB9\uFF0CGo \u53EA\u63D0\u4F9B\u4E86 "),f=n("code",null,"append",-1),y=s(" \u51FD\u6570\u6765\u9690\u5F0F\u7684\u6269\u5BB9\uFF0C\u4F46\u5185\u90E8\u662F\u901A\u8FC7\u8C03\u7528 runtime \u4E2D\u7684 "),w={href:"https://github.com/golang/go/blob/1724077b789ad92972ab1ac03788389645306cbb/src/runtime/slice.go#L166",target:"_blank",rel:"noopener noreferrer"},x=s("growslice"),G=n("br",null,null,-1),q=s(" \u51FD\u6570\u6765\u5B9E\u73B0\u7684\uFF1A"),T=p(`<div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">growslice</span><span class="token punctuation">(</span>et <span class="token operator">*</span>_type<span class="token punctuation">,</span> old slice<span class="token punctuation">,</span> <span class="token builtin">cap</span> <span class="token builtin">int</span><span class="token punctuation">)</span> slice
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>growslice \u51FD\u6570\u63A5\u53D7 3 \u4E2A\u53C2\u6570\uFF1A</p><ul><li>et\uFF1A\u5207\u7247\u5BB9\u5668\u4E2D\u7684\u6570\u636E\u7C7B\u578B\uFF0C\u5982 int\uFF0C<code>_type</code> \u53EF\u4EE5\u8868\u793A Go \u4E2D\u7684\u4EFB\u610F\u7C7B\u578B\uFF1B</li><li>old\uFF1A\u65E7\u5207\u7247\uFF1B</li><li>cap\uFF1A\u6269\u5BB9\u540E\u7684\u5207\u7247\u5BB9\u91CF\u3002</li></ul><p>\u6269\u5BB9\u6210\u529F\u540E\uFF0C\u8FD4\u56DE\u65B0\u7684\u5207\u7247\u3002</p><p>\u540C\u6837\u5730\uFF0C\u4F7F\u7528<code>go:linkname</code>\u6765\u94FE\u63A5 runtime \u4E2D\u7684 growslice \u51FD\u6570\uFF0C\u5982\u4E0B\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// runtime.go</span>
<span class="token keyword">type</span> GoType <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	Size       <span class="token builtin">uintptr</span>
	PtrData    <span class="token builtin">uintptr</span>
	Hash       <span class="token builtin">uint32</span>
	Flags      <span class="token builtin">uint8</span>
	Align      <span class="token builtin">uint8</span>
	FieldAlign <span class="token builtin">uint8</span>
	KindFlags  <span class="token builtin">uint8</span>
	Traits     unsafe<span class="token punctuation">.</span>Pointer
	GCData     <span class="token operator">*</span><span class="token builtin">byte</span>
	Str        <span class="token builtin">int32</span>
	PtrToSelf  <span class="token builtin">int32</span>
<span class="token punctuation">}</span>

<span class="token comment">// GoEface \u672C\u8D28\u662F interface</span>
<span class="token keyword">type</span> GoEface <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	Type  <span class="token operator">*</span>GoType
	Value unsafe<span class="token punctuation">.</span>Pointer
<span class="token punctuation">}</span>

<span class="token comment">//go:linkname growslice runtime.growslice</span>
<span class="token comment">//goland:noinspection GoUnusedParameter</span>
<span class="token keyword">func</span> <span class="token function">growslice</span><span class="token punctuation">(</span>et <span class="token operator">*</span>GoType<span class="token punctuation">,</span> old GoSlice<span class="token punctuation">,</span> <span class="token builtin">cap</span> <span class="token builtin">int</span><span class="token punctuation">)</span> GoSlice
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>growslice</code> \u51FD\u6570\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570 <code>et</code> \u5B9E\u9645\u662F Go \u5BF9\u6240\u6709\u7C7B\u578B\u7684\u4E00\u4E2A\u62BD\u8C61\u6570\u636E\u7ED3\u6784\u2014\u2014<code>GoType</code>\u3002</p><p>\u8FD9\u91CC\u5F15\u5165\u4E86 Go \u8BED\u8A00\u5B9E\u73B0\u673A\u5236\u4E2D\u7684\u4E24\u4E2A\u91CD\u8981\u6570\u636E\u7ED3\u6784\uFF1A</p><ul><li>GoEface\uFF1Aempty interface\uFF0C\u5373 interface{}\uFF0C\u7A7A\u63A5\u53E3\uFF1B</li><li>GoType\uFF1AGo \u7C7B\u578B\u5B9A\u4E49\u6570\u636E\u7ED3\u6784\uFF0C\u53EF\u7528\u4E8E\u8868\u793A\u4EFB\u610F\u7C7B\u578B\u3002</li></ul>`,9),S=s("\u5173\u4E8E GoEface\u3001GoIface\u3001GoType\u3001GoItab \u90FD\u662F Go \u8BED\u8A00\u5B9E\u73B0\u7684\u6838\u5FC3\u6570\u636E\u7ED3\u6784\uFF0C\u8FD9\u91CC\u7684\u5185\u5BB9\u5F88\u591A\uFF0C"),P=n("br",null,null,-1),C=s(" \u611F\u5174\u8DA3\u7684\u53EF\u4EE5\u53C2\u8003"),D={href:"https://zhuanlan.zhihu.com/p/427838620",target:"_blank",rel:"noopener noreferrer"},A=s("\u8FD9\u91CC"),B=s(" \u3002"),R=p(`<p>\u8FD9\u6837\uFF0C\u6211\u4EEC\u5C31\u80FD\u901A\u8FC7\u8C03\u7528 <code>growslice</code> \u51FD\u6570\u6765\u5BF9\u5207\u7247\u8FDB\u884C\u624B\u52A8\u6269\u5BB9\u4E86\uFF0C\u5982\u4E0B\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// runtime.go</span>
<span class="token keyword">func</span> <span class="token function">UnpackType</span><span class="token punctuation">(</span>t reflect<span class="token punctuation">.</span>Type<span class="token punctuation">)</span> <span class="token operator">*</span>GoType <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token operator">*</span>GoType<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">*</span>GoEface<span class="token punctuation">)</span><span class="token punctuation">(</span>unsafe<span class="token punctuation">.</span><span class="token function">Pointer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Value<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// runtime_test.go</span>
<span class="token keyword">func</span> <span class="token function">Test_growslice</span><span class="token punctuation">(</span>t <span class="token operator">*</span>testing<span class="token punctuation">.</span>T<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	assert <span class="token operator">:=</span> assert<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>

	<span class="token keyword">var</span> typeByte <span class="token operator">=</span> <span class="token function">UnpackType</span><span class="token punctuation">(</span>reflect<span class="token punctuation">.</span><span class="token function">TypeOf</span><span class="token punctuation">(</span><span class="token function">byte</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

	spew<span class="token punctuation">.</span><span class="token function">Dump</span><span class="token punctuation">(</span>typeByte<span class="token punctuation">)</span>

	dest <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>

	assert<span class="token punctuation">.</span><span class="token function">Equal</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>dest<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
	assert<span class="token punctuation">.</span><span class="token function">Equal</span><span class="token punctuation">(</span><span class="token function">cap</span><span class="token punctuation">(</span>dest<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>

	ds <span class="token operator">:=</span> <span class="token punctuation">(</span><span class="token operator">*</span>GoSlice<span class="token punctuation">)</span><span class="token punctuation">(</span>unsafe<span class="token punctuation">.</span><span class="token function">Pointer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>dest<span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token operator">*</span>ds <span class="token operator">=</span> <span class="token function">growslice</span><span class="token punctuation">(</span>typeByte<span class="token punctuation">,</span> <span class="token operator">*</span>ds<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>

	assert<span class="token punctuation">.</span><span class="token function">Equal</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>dest<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
	assert<span class="token punctuation">.</span><span class="token function">Equal</span><span class="token punctuation">(</span><span class="token function">cap</span><span class="token punctuation">(</span>dest<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">112</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7531\u4E8E <code>growslice</code> \u7684\u53C2\u6570<code>et</code>\u7C7B\u578B\u5728 runtime \u4E2D\u4E0D\u53EF\u89C1\uFF0C\u6211\u4EEC\u91CD\u65B0\u5B9A\u4E49\u4E86 <code>GoType</code> \u6765\u8868\u793A\uFF0C<br> \u5E76\u4E14\u901A\u8FC7\u53CD\u5C04\u7684\u673A\u5236\u6765\u62FF\u5230\u5B57\u8282\u5207\u7247\u4E2D\u7684 GoType\uFF0C\u7136\u540E\u8C03\u7528 growslice \u5B8C\u6210\u6269\u5BB9\u5DE5\u4F5C\u3002</p><p>\u8FD0\u884C\u7A0B\u5E8F\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>--- PASS: Test_growslice (0.00s)
PASS
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,5),E=s("\u6CE8\u610F\u4E00\u4E2A\u70B9\uFF0Cgrowslice \u4F20\u5165\u7684 cap \u53C2\u6570\u662F "),$=n("code",null,"100",-1),L=s("\uFF0C\u4F46\u662F\u6700\u540E\u7684\u6269\u5BB9\u7ED3\u679C\u5374\u662F "),X=n("code",null,"112",-1),I=s("\uFF0C"),U=n("br",null,null,-1),N=s(" \u8FD9\u4E2A\u662F\u56E0\u4E3A growslice \u4F1A\u505A\u4E00\u4E2A "),O=n("code",null,"roundupsize",-1),V=s(" \u5904\u7406\uFF0C\u611F\u5174\u8DA3\u7684\u540C\u5B66\u53EF\u4EE5\u53C2\u8003"),z={href:"https://draveness.me/golang/docs/part2-foundation/ch03-datastructure/golang-array-and-slice/",target:"_blank",rel:"noopener noreferrer"},M=s("\u8FD9\u91CC"),j=s(" \u3002"),F=p(`<h2 id="\u9B54\u6CD5-2-\u8C03\u7528-c-\u6C47\u7F16\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u9B54\u6CD5-2-\u8C03\u7528-c-\u6C47\u7F16\u51FD\u6570" aria-hidden="true">#</a> \u9B54\u6CD5 2\uFF1A\u8C03\u7528 C/\u6C47\u7F16\u51FD\u6570</h2><p>\u4E0B\u9762\uFF0C\u6211\u4EEC\u518D\u6765\u770B Go \u7684\u53E6\u5916\u4E00\u4E2A\u66F4\u52A0\u6709\u8DA3\u7684\u9ED1\u9B54\u6CD5\u3002</p><h3 id="cgo" tabindex="-1"><a class="header-anchor" href="#cgo" aria-hidden="true">#</a> cgo</h3><p>\u901A\u8FC7 cgo\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5F88\u65B9\u4FBF\u5730\u5728 Go \u4E2D\u8C03\u7528 C \u4EE3\u7801\uFF0C\u5982\u4E0B\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">/*
#include &lt;stdio.h&gt;
#include &lt;unistd.h&gt;

static void* Sbrk(int size) {
	void *r = sbrk(size);
	if(r == (void *)-1){
  		return NULL;
 	}
	return r;
}
*/</span>
<span class="token keyword">import</span> <span class="token string">&quot;C&quot;</span>

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;fmt&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	mem <span class="token operator">:=</span> C<span class="token punctuation">.</span><span class="token function">Sbrk</span><span class="token punctuation">(</span>C<span class="token punctuation">.</span><span class="token function">int</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token keyword">defer</span> C<span class="token punctuation">.</span><span class="token function">free</span><span class="token punctuation">(</span>mem<span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>mem<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD0\u884C\u7A0B\u5E8F\uFF0C\u4F1A\u5F97\u5230\u5982\u4E0B\u8F93\u51FA\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>0xba00000
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>cgo \u662F Go \u4E0E C \u4E4B\u95F4\u7684\u6865\u6881\uFF0C\u8BA9 Go \u53EF\u4EE5\u4EAB\u53D7 C \u8BED\u8A00\u5F3A\u5927\u7684\u7CFB\u7EDF\u7F16\u7A0B\u80FD\u529B\uFF0C\u6BD4\u5982\u8FD9\u91CC\u7684 <code>sbrk</code> \u4F1A\u76F4\u63A5\u5411<br> \u8FDB\u7A0B\u7533\u8BF7\u4E00\u6BB5\u5185\u5B58\uFF0C\u800C\u8FD9\u6BB5\u5185\u5B58\u662F\u4E0D\u53D7 Go GC \u7684\u5F71\u54CD\u7684\uFF0C\u56E0\u6B64\u6211\u4EEC\u5FC5\u987B\u624B\u52A8\u5730\u91CA\u653E(free)\u6389\u5B83\u3002</p><p>\u5728\u4E00\u4E9B\u7279\u6B8A\u573A\u666F\uFF0C\u6BD4\u5982\u5168\u5C40\u7F13\u5B58\uFF0C\u4E3A\u4E86\u907F\u514D\u6570\u636E\u88AB GC \u6389\u800C\u5BFC\u81F4\u7F13\u5B58\u5931\u6548\uFF0C\u90A3\u4E48\u53EF\u4EE5\u5C1D\u8BD5\u8FD9\u6837\u4F7F\u7528\u3002</p><p>\u5F53\u7136\uFF0C\u8FD9\u8FD8\u4E0D\u591F tricky\uFF0C\u522B\u5FD8\u4E86\uFF0CC \u8BED\u8A00\u662F\u53EF\u4EE5\u76F4\u63A5\u5185\u8054\u6C47\u7F16\u7684\uFF0C\u540C\u6837\u5730\uFF0C\u6211\u4EEC\u4E5F\u53EF\u4EE5\u5728 Go \u4E2D\u5185\u8054\u6C47\u7F16<br> \u8BD5\u8BD5\uFF0C\u5982\u4E0B\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">/*
#include &lt;stdio.h&gt;

static int Add(int i, int j)
{
  int res = 0;
  __asm__ (&quot;add %1, %2&quot;
    : &quot;=r&quot; (res)
    : &quot;r&quot; (i), &quot;0&quot; (j)
  );
  return res;
}
*/</span>
<span class="token keyword">import</span> <span class="token string">&quot;C&quot;</span>
<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;fmt&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	r <span class="token operator">:=</span> C<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>C<span class="token punctuation">.</span><span class="token function">int</span><span class="token punctuation">(</span><span class="token number">2022</span><span class="token punctuation">)</span><span class="token punctuation">,</span> C<span class="token punctuation">.</span><span class="token function">int</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD0\u884C\u7A0B\u5E8F\uFF0C\u53EF\u4EE5\u5F97\u5230\u5982\u4E0B\u8F93\u51FA\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>2040
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,13),H=s("cgo \u867D\u7136\u7ED9\u4E86\u6211\u4EEC\u4E00\u5EA7\u6865\u6881\uFF0C\u4F46\u4ED8\u51FA\u7684\u4EE3\u4EF7\u4E5F\u4E0D\u5C0F\uFF0C\u5177\u4F53\u7684\u7F3A\u70B9\u53EF\u4EE5\u53C2\u8003"),Q={href:"https://cloud.tencent.com/developer/article/1650525",target:"_blank",rel:"noopener noreferrer"},Y=s("\u8FD9\u91CC"),W=s("\u3002"),J=s("\u5BF9 cgo \u611F\u5174\u8DA3\u7684\u540C\u5B66\u53EF\u4EE5\u53C2\u8003"),K={href:"https://chai2010.cn/advanced-go-programming-book/ch2-cgo/ch2-03-cgo-types.html",target:"_blank",rel:"noopener noreferrer"},Z=s("\u8FD9\u91CC"),nn=s(" \u3002"),sn=p('<h3 id="\u6C47\u7F16" tabindex="-1"><a class="header-anchor" href="#\u6C47\u7F16" aria-hidden="true">#</a> \u6C47\u7F16</h3><h4 id="isspace" tabindex="-1"><a class="header-anchor" href="#isspace" aria-hidden="true">#</a> isspace</h4><p>\u90A3\u4E48\u6709\u6CA1\u6709\u4E00\u79CD\u65B9\u5F0F\u53EF\u4EE5\u56DE\u907F\u6389 cgo \u7684\u7F3A\u70B9\uFF0C\u7B54\u6848\u81EA\u7136\u662F\u53EF\u4EE5\u7684\u3002</p><p>\u8FD9\u4E2A\u65B9\u5F0F\u5176\u5B9E\u5F88\u5BB9\u6613\u60F3\u5230\uFF1A\u4E0D\u4F7F\u7528 cgo\uFF0C\u800C\u662F\u4F7F\u7528 plan9\uFF0C\u4E5F\u5C31\u662F Go \u652F\u6301\u7684\u6C47\u7F16\u8BED\u8A00\u3002</p><p>\u5F53\u7136\u6211\u4EEC\u4E0D\u662F\u76F4\u63A5\u53BB\u5199\u6C47\u7F16\uFF0C\u800C\u662F\u5C06 C \u7F16\u8BD1\u6210\u6C47\u7F16\uFF0C\u7136\u540E\u518D\u8F6C\u5316\u6210 plan9 \u4E0E .go \u4EE3\u7801\u4E00\u8D77\u7F16\u8BD1\u3002</p><p>\u7F16\u8BD1\u7684\u8FC7\u7A0B\u5982\u4E0B\u56FE\u6240\u793A\uFF1A</p><p><img src="'+l+`" alt="asm2asm" loading="lazy"></p><p>\u800C\u4E14 C \u672C\u8EAB\u5C31\u662F\u6C47\u7F16\u7684\u9AD8\u7EA7\u62BD\u8C61\uFF0C\u4F5C\u4E3A\u76EE\u524D\u6700\u5F3A\u52B2\u6027\u80FD\u7684\u5B58\u5728\uFF0C\u8FD9\u79CD\u65B9\u5F0F\u4E0D\u4EC5\u56DE\u907F\u4E86 cgo \u7684\u6027\u80FD\u95EE\u9898\uFF0C<br> \u53CD\u800C\u5C06\u7A0B\u5E8F\u6027\u80FD\u63D0\u9AD8\u4E86\u3002\u8FC7\u7A0B\u5982\u4E0B\uFF1A</p><p>\u9996\u5148\uFF0C\u6211\u4EEC\u5B9A\u4E49\u4E00\u4E2A\u7B80\u5355\u7684 C \u8BED\u8A00\u51FD\u6570 <code>isspace</code>(\u5224\u65AD\u5B57\u7B26\u4E3A\u7A7A)\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">// ./inner/op.h</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">OP_H</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">OP_H</span></span>

<span class="token keyword">char</span> <span class="token function">isspace</span><span class="token punctuation">(</span><span class="token keyword">char</span> ch<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// ./inner/op.c</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;op.h&quot;</span></span>

<span class="token keyword">char</span> <span class="token function">isspace</span><span class="token punctuation">(</span><span class="token keyword">char</span> ch<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> ch <span class="token operator">==</span> <span class="token char">&#39; &#39;</span> <span class="token operator">||</span> ch <span class="token operator">==</span> <span class="token char">&#39;\\r&#39;</span> <span class="token operator">||</span> ch <span class="token operator">==</span> <span class="token char">&#39;\\n&#39;</span> <span class="token operator">|</span> ch <span class="token operator">==</span> <span class="token char">&#39;\\t&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7136\u540E\uFF0C\u4F7F\u7528 <code>clang</code> \u5C06\u5176\u7F16\u8BD1\u4E3A\u6C47\u7F16(\u6CE8\u610F\uFF1A\u662F clang)\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ clang -mno-red-zone -fno-asynchronous-unwind-tables -fno-builtin -fno-exceptions <span class="token punctuation">\\</span>
-fno-rtti -fno-stack-protector -nostdlib -O3 -msse4 -mavx -mno-avx2 -DUSE_AVX<span class="token operator">=</span><span class="token number">1</span> <span class="token punctuation">\\</span>
 -DUSE_AVX2<span class="token operator">=</span><span class="token number">0</span> -S ./inner/*.c
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7F16\u8BD1\u6210\u529F\u540E\uFF0C\u4F1A\u5728 inner \u6587\u4EF6\u5939\u4E0B\u751F\u6210\u4E00\u4E2A <code>op.s</code> \u6C47\u7F16\u6587\u4EF6\uFF0C\u5927\u81F4\u5982\u4E0B\uFF1A</p><div class="language-s ext-s line-numbers-mode"><pre class="language-s"><code>	.section	__TEXT,__text,regular,pure_instructions
	.build_version macos, 11, 0
	.globl	_isspace                        ## -- Begin function isspace
	.p2align	4, 0x90
_isspace:                               ## @isspace
## %bb.0:
	pushq	%rbp
	movq	%rsp, %rbp
	movb	$1, %al
	cmpb	$13, %dil
	je	LBB0_3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>clang \u9ED8\u8BA4\u751F\u6210\u7684\u6C47\u7F16\u662F AT&amp;T \u683C\u5F0F\u7684\uFF0C\u8FD9\u79CD\u6C47\u7F16 Go \u662F\u65E0\u6CD5\u7F16\u8BD1\u7684(gccgo \u9664\u5916)\uFF0C\u56E0\u6B64\u8FD9\u91CC\u6709\u4E00\u6B65\u8F6C\u6362\u5DE5\u4F5C\u3002</p>`,15),an=s("\u8D1F\u8D23\u5C06 AT&T \u6C47\u7F16\u8F6C\u5316\u6210 plan9 \u6C47\u7F16\uFF0C\u800C\u4E8C\u8005\u4E4B\u95F4\u7684\u8BED\u6CD5\u5DEE\u5F02\u5176\u5B9E\u662F\u6BD4\u8F83\u5927\u7684\uFF0C\u56E0\u6B64\u8FD9\u91CC\u501F\u52A9\u4E00\u4E2A\u8F6C\u6362"),tn=n("br",null,null,-1),pn={href:"https://github.com/chenzhuoyu/asm2asm",target:"_blank",rel:"noopener noreferrer"},en=s("asm2asm \u5DE5\u5177"),cn=s(" \u6765\u5B8C\u6210\u3002"),on=p(`<p>\u5C06 <code>asm2asm</code> clone \u5230\u672C\u5730\uFF0C\u7136\u540E\u8FD0\u884C\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">git</span> clone https://github.com/chenzhuoyu/asm2asm
$ ./tools/asm2asm.py ./op.s ./inner/op.s
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6267\u884C\u540E\uFF0C\u4F1A\u62A5\u9519\u3002\u539F\u56E0\u5728\u4E8E\uFF0CGo \u5BF9\u4E8E plan9 \u6C47\u7F16\u6587\u4EF6\u9700\u8981\u4E00\u4E2A\u5BF9\u5E94\u7684 .go \u58F0\u660E\u6587\u4EF6\u6765\u5BF9\u5E94\u3002</p><p>\u6211\u4EEC\u5728 <code>./inner/op.h</code> \u6587\u4EF6\u4E2D\u5B9A\u4E49\u4E86 <code>isspace</code> \u51FD\u6570\uFF0C\u56E0\u6B64\u9700\u8981\u65B0\u5EFA\u4E00\u4E2A\u540C\u540D\u7684 op.go \u6587\u4EF6\u6765\u58F0\u660E\u8FD9\u4E2A\u51FD\u6570\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">//go:nosplit</span>
<span class="token comment">//go:noescape</span>
<span class="token comment">//goland:noinspection GoUnusedParameter</span>
<span class="token keyword">func</span> <span class="token function">__isspace</span><span class="token punctuation">(</span>ch <span class="token builtin">byte</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>ret <span class="token builtin">byte</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7136\u540E\u518D\u6B21\u8FD0\u884C asm2asm \u5DE5\u5177\u6765\u751F\u6210\u6C47\u7F16\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>$ ./tools/asm2asm.py ./op.s ./inner/op.s

$ tree .

.
|__ inner
|   |__  op.c
|   |__ op.h
|   |__ op.s
|__ op.go
|__ op.s
|__ op_subr.go
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>asm2asm \u4F1A\u751F\u6210\u4E24\u4E2A\u6587\u4EF6\uFF1A<code>op.s</code> \u548C <code>op_subr.go</code>\uFF1A</p><ul><li>op.s\uFF1A\u7FFB\u8BD1\u800C\u6765\u7684 plan9 \u6C47\u7F16\u6587\u4EF6\uFF1B</li><li>op_subr.go\uFF1A\u51FD\u6570\u8C03\u7528\u8F85\u52A9\u6587\u4EF6\u3002</li></ul><p>\u751F\u6210\u540E\uFF0Cop.go \u4E2D\u7684 <code>__isspace</code> \u51FD\u6570\u5C31\u80FD\u987A\u5229\u7684\u94FE\u63A5\u4E0A\u5BF9\u5E94\u7684\u6C47\u7F16\u4EE3\u7801\uFF0C\u5E76\u8FD0\u884C\uFF0C\u5982\u4E0B\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">Test___isspace</span><span class="token punctuation">(</span>t <span class="token operator">*</span>testing<span class="token punctuation">.</span>T<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">type</span> args <span class="token keyword">struct</span> <span class="token punctuation">{</span>
		ch <span class="token builtin">byte</span>
	<span class="token punctuation">}</span>
	tests <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">struct</span> <span class="token punctuation">{</span>
		name    <span class="token builtin">string</span>
		args    args
		wantRet <span class="token builtin">byte</span>
	<span class="token punctuation">}</span><span class="token punctuation">{</span>
		<span class="token punctuation">{</span>
			name<span class="token punctuation">:</span>    <span class="token string">&quot;false&quot;</span><span class="token punctuation">,</span>
			args<span class="token punctuation">:</span>    args<span class="token punctuation">{</span>ch<span class="token punctuation">:</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
			wantRet<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span>
			name<span class="token punctuation">:</span>    <span class="token string">&quot;true&quot;</span><span class="token punctuation">,</span>
			args<span class="token punctuation">:</span>    args<span class="token punctuation">{</span>ch<span class="token punctuation">:</span> <span class="token char">&#39;\\n&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
			wantRet<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> tt <span class="token operator">:=</span> <span class="token keyword">range</span> tests <span class="token punctuation">{</span>
		t<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span>tt<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>t <span class="token operator">*</span>testing<span class="token punctuation">.</span>T<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> gotRet <span class="token operator">:=</span> <span class="token function">__isspace</span><span class="token punctuation">(</span>tt<span class="token punctuation">.</span>args<span class="token punctuation">.</span>ch<span class="token punctuation">)</span><span class="token punctuation">;</span> gotRet <span class="token operator">!=</span> tt<span class="token punctuation">.</span>wantRet <span class="token punctuation">{</span>
				t<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">&quot;__isspace() = %v, want %v&quot;</span><span class="token punctuation">,</span> gotRet<span class="token punctuation">,</span> tt<span class="token punctuation">.</span>wantRet<span class="token punctuation">)</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// output</span>
<span class="token operator">==</span><span class="token operator">=</span> RUN   Test___isspace
<span class="token operator">==</span><span class="token operator">=</span> RUN   Test___isspace<span class="token operator">/</span><span class="token boolean">false</span>
<span class="token operator">==</span><span class="token operator">=</span> RUN   Test___isspace<span class="token operator">/</span><span class="token boolean">true</span>
<span class="token operator">--</span><span class="token operator">-</span> PASS<span class="token punctuation">:</span> Test___isspace <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">.</span>00s<span class="token punctuation">)</span>
    <span class="token operator">--</span><span class="token operator">-</span> PASS<span class="token punctuation">:</span> Test___isspace<span class="token operator">/</span><span class="token boolean">false</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">.</span>00s<span class="token punctuation">)</span>
    <span class="token operator">--</span><span class="token operator">-</span> PASS<span class="token punctuation">:</span> Test___isspace<span class="token operator">/</span><span class="token boolean">true</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">.</span>00s<span class="token punctuation">)</span>
PASS
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>__isspace \u987A\u5229\u8FD0\u884C\uFF0C\u5E76\u901A\u8FC7\u4E86\u5355\u6D4B\u3002</p><h4 id="u32toa-small" tabindex="-1"><a class="header-anchor" href="#u32toa-small" aria-hidden="true">#</a> u32toa_small</h4><p>\u4E00\u4E2A isspace \u51FD\u6570\u6709\u4E9B\u7B80\u5355\uFF0C\u65E0\u6CD5\u5B8C\u5168\u53D1\u6325\u51FA\u6C47\u7F16\u7684\u80FD\u529B\uFF0C\u4E0B\u9762\u6211\u4EEC\u6765\u770B\u4E00\u4E2A\u7A0D\u5FAE\u590D\u6742\u4E00\u70B9\u7684\u4F8B\u5B50\uFF1A\u5C06\u6574\u6570\u8F6C\u5316\u4E3A\u5B57\u7B26\u4E32\u3002</p><p>\u5728 Go \u4E2D\uFF0C\u6574\u6570\u8F6C\u5316\u4E3A\u5B57\u7B26\u4E32\u7684\u65B9\u5F0F\u6709\u591A\u79CD\uFF0C\u6BD4\u5982\u8BF4\uFF1A<code>strconv.Itoa</code> \u51FD\u6570\u3002</p><p>\u8FD9\u91CC\uFF0C\u6211\u9009\u62E9\u7528 C \u6765\u5199\u4E00\u4E2A\u7B80\u5355\u7684\u6574\u6570\u8F6C\u5B57\u7B26\u4E32\u7684\u51FD\u6570\uFF1A<code>u32toa_small</code>\uFF0C\u7136\u540E\u5C06\u5176\u7F16\u8BD1\u4E3A\u6C47\u7F16\u4EE3\u7801\u4F9B Go \u8C03\u7528\uFF0C\u5E76\u770B\u770B\u4E8C\u8005\u4E4B\u95F4\u7684\u6027\u80FD\u5DEE\u5F02\u3002</p><p>u32toa_small \u7684\u5B9E\u73B0\u4E5F\u6BD4\u8F83\u7B80\u5355\uFF0C\u4F7F\u7528\u67E5\u8868\u6CD5(strconv.Itoa \u4F7F\u7528\u7684\u4E5F\u662F\u8FD9\u79CD\u65B9\u6CD5)\uFF0C\u5982\u4E0B\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;op.h&quot;</span></span>

<span class="token keyword">static</span> <span class="token keyword">const</span> <span class="token keyword">char</span> Digits<span class="token punctuation">[</span><span class="token number">200</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token char">&#39;0&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;6&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;7&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;8&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;9&#39;</span><span class="token punctuation">,</span>
    <span class="token char">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;6&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;7&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;8&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;9&#39;</span><span class="token punctuation">,</span>
    <span class="token char">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;6&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;7&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;8&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;9&#39;</span><span class="token punctuation">,</span>
    <span class="token char">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;6&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;7&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;8&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;9&#39;</span><span class="token punctuation">,</span>
    <span class="token char">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;6&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;7&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;8&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;9&#39;</span><span class="token punctuation">,</span>
    <span class="token char">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;6&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;7&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;8&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;9&#39;</span><span class="token punctuation">,</span>
    <span class="token char">&#39;6&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;6&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;6&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;6&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;6&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;6&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;6&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;6&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;6&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;7&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;6&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;8&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;6&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;9&#39;</span><span class="token punctuation">,</span>
    <span class="token char">&#39;7&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;7&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;7&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;7&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;7&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;7&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;7&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;6&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;7&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;7&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;7&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;8&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;7&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;9&#39;</span><span class="token punctuation">,</span>
    <span class="token char">&#39;8&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;8&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;8&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;8&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;8&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;8&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;8&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;6&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;8&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;7&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;8&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;8&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;8&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;9&#39;</span><span class="token punctuation">,</span>
    <span class="token char">&#39;9&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;9&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;9&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;9&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;9&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;9&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;9&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;6&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;9&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;7&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;9&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;8&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;9&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;9&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// &lt; 10000</span>
<span class="token keyword">int</span> <span class="token function">u32toa_small</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>out<span class="token punctuation">,</span> <span class="token class-name">uint32_t</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span>      n  <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token class-name">uint32_t</span> d1 <span class="token operator">=</span> <span class="token punctuation">(</span>val <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token class-name">uint32_t</span> d2 <span class="token operator">=</span> <span class="token punctuation">(</span>val <span class="token operator">%</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">;</span>

    <span class="token comment">/* 1000-th digit */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>val <span class="token operator">&gt;=</span> <span class="token number">1000</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        out<span class="token punctuation">[</span>n<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> Digits<span class="token punctuation">[</span>d1<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/* 100-th digit */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>val <span class="token operator">&gt;=</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        out<span class="token punctuation">[</span>n<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> Digits<span class="token punctuation">[</span>d1 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/* 10-th digit */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>val <span class="token operator">&gt;=</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        out<span class="token punctuation">[</span>n<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> Digits<span class="token punctuation">[</span>d2<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/* last digit */</span>
    out<span class="token punctuation">[</span>n<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> Digits<span class="token punctuation">[</span>d2 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> n<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7136\u540E\u5728 op.go \u4E2D\u52A0\u5165\u5BF9\u5E94\u7684 <code>__u32toa_small</code> \u51FD\u6570\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// &lt; 10000</span>
<span class="token comment">//go:nosplit</span>
<span class="token comment">//go:noescape</span>
<span class="token comment">//goland:noinspection GoUnusedParameter</span>
<span class="token keyword">func</span> <span class="token function">__u32toa_small</span><span class="token punctuation">(</span>out <span class="token operator">*</span><span class="token builtin">byte</span><span class="token punctuation">,</span> val <span class="token builtin">uint32</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>ret <span class="token builtin">int</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528 clang \u91CD\u65B0\u7F16\u8BD1 op.c \u6587\u4EF6\uFF0C\u5E76\u7528 asm2asm \u5DE5\u5177\u6765\u751F\u6210\u5BF9\u5E94\u7684\u6C47\u7F16\u4EE3\u7801(\u8282\u9009\u90E8\u5206)\uFF1A</p><div class="language-s ext-s line-numbers-mode"><pre class="language-s"><code>_u32toa_small:
	BYTE $0x55  // pushq        %rbp
	WORD $0x8948; BYTE $0xe5  // movq         %rsp, %rbp
	MOVL SI, AX
	IMUL3Q $1374389535, AX, AX
	SHRQ $37, AX
	LEAQ 0(AX)(AX*1), DX
	WORD $0xc06b; BYTE $0x64  // imull        $100, %eax, %eax
	MOVL SI, CX
	SUBL AX, CX
	ADDQ CX, CX
	CMPL SI, $1000
	JB LBB1_2
	LONG $0x60058d48; WORD $0x0000; BYTE $0x00  // leaq         $96(%rip), %rax  /* _Digits(%rip) */
	MOVB 0(DX)(AX*1), AX
	MOVB AX, 0(DI)
	MOVL $1, AX
	JMP LBB1_3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7136\u540E\u5728 Go \u4E2D\u8C03\u7528\u8BE5\u51FD\u6570\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">Test___u32toa_small</span><span class="token punctuation">(</span>t <span class="token operator">*</span>testing<span class="token punctuation">.</span>T<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">var</span> buf <span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token builtin">byte</span>
	<span class="token keyword">type</span> args <span class="token keyword">struct</span> <span class="token punctuation">{</span>
		out <span class="token operator">*</span><span class="token builtin">byte</span>
		val <span class="token builtin">uint32</span>
	<span class="token punctuation">}</span>
	tests <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">struct</span> <span class="token punctuation">{</span>
		name    <span class="token builtin">string</span>
		args    args
		wantRet <span class="token builtin">int</span>
	<span class="token punctuation">}</span><span class="token punctuation">{</span>
		<span class="token punctuation">{</span>
			name<span class="token punctuation">:</span> <span class="token string">&quot;9999&quot;</span><span class="token punctuation">,</span>
			args<span class="token punctuation">:</span> args<span class="token punctuation">{</span>
				out<span class="token punctuation">:</span> <span class="token operator">&amp;</span>buf<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
				val<span class="token punctuation">:</span> <span class="token number">9999</span><span class="token punctuation">,</span>
			<span class="token punctuation">}</span><span class="token punctuation">,</span>
			wantRet<span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span>
			name<span class="token punctuation">:</span> <span class="token string">&quot;1234&quot;</span><span class="token punctuation">,</span>
			args<span class="token punctuation">:</span> args<span class="token punctuation">{</span>
				out<span class="token punctuation">:</span> <span class="token operator">&amp;</span>buf<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
				val<span class="token punctuation">:</span> <span class="token number">1234</span><span class="token punctuation">,</span>
			<span class="token punctuation">}</span><span class="token punctuation">,</span>
			wantRet<span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> tt <span class="token operator">:=</span> <span class="token keyword">range</span> tests <span class="token punctuation">{</span>
		t<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span>tt<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>t <span class="token operator">*</span>testing<span class="token punctuation">.</span>T<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			got <span class="token operator">:=</span> <span class="token function">__u32toa_small</span><span class="token punctuation">(</span>tt<span class="token punctuation">.</span>args<span class="token punctuation">.</span>out<span class="token punctuation">,</span> tt<span class="token punctuation">.</span>args<span class="token punctuation">.</span>val<span class="token punctuation">)</span>
			assert<span class="token punctuation">.</span><span class="token function">Equalf</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> tt<span class="token punctuation">.</span>wantRet<span class="token punctuation">,</span> got<span class="token punctuation">,</span> <span class="token string">&quot;__u32toa_small(%v, %v)&quot;</span><span class="token punctuation">,</span> tt<span class="token punctuation">.</span>args<span class="token punctuation">.</span>out<span class="token punctuation">,</span> tt<span class="token punctuation">.</span>args<span class="token punctuation">.</span>val<span class="token punctuation">)</span>
			assert<span class="token punctuation">.</span><span class="token function">Equalf</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> tt<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token function">string</span><span class="token punctuation">(</span>buf<span class="token punctuation">[</span><span class="token punctuation">:</span>tt<span class="token punctuation">.</span>wantRet<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;ret string must equal name&quot;</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6D4B\u8BD5\u6210\u529F\uFF0C__u32toa_small \u51FD\u6570\u4E0D\u4EC5\u6210\u529F\u8FD0\u884C\uFF0C\u800C\u4E14\u901A\u8FC7\u4E86\u6D4B\u8BD5\u3002</p><p>\u6700\u540E\uFF0C\u6211\u4EEC\u6765\u505A\u4E00\u4E2A\u6027\u80FD\u8DD1\u5206\u770B\u770B __u32toa_small \u548C strconv.Itoa \u4E4B\u95F4\u7684\u6027\u80FD\u5DEE\u5F02\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">BenchmarkGoConv</span><span class="token punctuation">(</span>b <span class="token operator">*</span>testing<span class="token punctuation">.</span>B<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	val <span class="token operator">:=</span> <span class="token function">int</span><span class="token punctuation">(</span>rand<span class="token punctuation">.</span><span class="token function">Int31</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">10000</span><span class="token punctuation">)</span>
	b<span class="token punctuation">.</span><span class="token function">ResetTimer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">for</span> n <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> n <span class="token operator">&lt;</span> b<span class="token punctuation">.</span>N<span class="token punctuation">;</span> n<span class="token operator">++</span> <span class="token punctuation">{</span>
		strconv<span class="token punctuation">.</span><span class="token function">Itoa</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">BenchmarkFastConv</span><span class="token punctuation">(</span>b <span class="token operator">*</span>testing<span class="token punctuation">.</span>B<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">var</span> buf <span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token builtin">byte</span>
	val <span class="token operator">:=</span> <span class="token function">uint32</span><span class="token punctuation">(</span>rand<span class="token punctuation">.</span><span class="token function">Int31</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">10000</span><span class="token punctuation">)</span>
	b<span class="token punctuation">.</span><span class="token function">ResetTimer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">for</span> n <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> n <span class="token operator">&lt;</span> b<span class="token punctuation">.</span>N<span class="token punctuation">;</span> n<span class="token operator">++</span> <span class="token punctuation">{</span>
		<span class="token function">__u32toa_small</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>buf<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528 <code>go test -bench</code> \u8FD0\u884C\u8FD9\u4E24\u4E2A\u6027\u80FD\u6D4B\u8BD5\u51FD\u6570\uFF0C\u7ED3\u679C\u5982\u4E0B\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>BenchmarkGoConv
BenchmarkGoConv-12    	60740782	        19.52 ns/op

BenchmarkFastConv
BenchmarkFastConv-12    122945924	         9.455 ns/op
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4ECE\u7ED3\u679C\u4E2D\uFF0C\u53EF\u4EE5\u660E\u663E\u770B\u51FA __u32toa_small \u4F18\u4E8E Itoa\uFF0C\u5927\u6982\u6709\u4E00\u500D\u7684\u63D0\u5347\u3002</p><h2 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h2><p>\u81F3\u6B64\uFF0CGo \u7684\u4E24\u4E2A\u9ED1\u9B54\u6CD5\u6280\u5DE7\u5DF2\u7ECF\u4ECB\u7ECD\u5B8C\u6BD5\u4E86\uFF0C\u611F\u5174\u8DA3\u7684\u540C\u5B66\u53EF\u4EE5\u81EA\u5DF1\u5B9E\u8DF5\u770B\u770B\u3002</p><p>Go \u7684\u9ED1\u9B54\u6CD5\u4E00\u5B9A\u7A0B\u5EA6\u4E0A\u90FD\u4F7F\u7528\u4E86 unsafe \u7684\u80FD\u529B\uFF0C\u8FD9\u4E5F\u662F Go \u4E0D\u63D0\u5021\u7684\uFF0C\u5F53\u7136\u4F7F\u7528 unsafe \u5176\u5B9E\u5C31\u548C\u666E\u901A\u7684 C \u4EE3\u7801\u7F16\u5199\u4E00\u6837\uFF0C\u56E0\u6B64\u4E5F\u65E0\u9700\u6709\u592A\u5F3A\u7684\u5FC3\u7406\u8D1F\u62C5\u3002</p>`,33),ln=s("\u5B9E\u9645\u4E0A\uFF0C\u4E0A\u8FF0\u7684\u4E24\u79CD\u65B9\u6CD5\u90FD\u88AB "),un={href:"https://github.com/bytedance/sonic",target:"_blank",rel:"noopener noreferrer"},rn=s("sonic"),kn=s(" \u7528\u5728\u4E86\u751F\u4EA7\u73AF\u5883\u4E0A\uFF0C\u800C\u4E14\u5E26\u6765\u7684\u5F88\u5927\u7684\u6027\u80FD\u63D0\u5347\uFF0C\u8282\u7EA6\u5927\u91CF\u8D44\u6E90\u3002"),dn=n("p",null,[s("\u56E0\u6B64\uFF0C\u5F53 Go \u73B0\u6709\u7684\u6807\u51C6\u5E93\u65E0\u6CD5\u6EE1\u8DB3\u4F60\u7684\u9700\u6C42\u65F6\uFF0C\u4E0D\u8981\u53D7\u5230\u8BED\u8A00\u672C\u8EAB\u7684\u9650\u5236\uFF0C\u800C\u662F\u7528\u867D\u7136\u5C11\u89C1\u4F46\u6709\u6548\u7684\u65B9\u5F0F\u53BB\u89E3\u51B3"),n("br"),s(" \u5B83\u3002")],-1),vn=n("p",null,"\u5E0C\u671B\u4E0A\u9762\u7684\u4E24\u4E2A\u9ED1\u9B54\u6CD5\u80FD\u5E26\u4F60\u5BF9 Go \u4E0D\u4E00\u6837\u7684\u8BA4\u8BC6\u3002",-1),mn=n("h2",{id:"\u53C2\u8003\u8D44\u6599",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u53C2\u8003\u8D44\u6599","aria-hidden":"true"},"#"),s(" \u53C2\u8003\u8D44\u6599")],-1),bn={href:"https://github.com/bytedance/sonic",target:"_blank",rel:"noopener noreferrer"},hn=s("https://github.com/bytedance/sonic"),gn={href:"https://juejin.cn/post/6974581261192921095",target:"_blank",rel:"noopener noreferrer"},_n=s("https://juejin.cn/post/6974581261192921095"),fn={href:"https://www.keil.com/support/man/docs/armclang_intro/armclang_intro_ddx1471430827125.htm",target:"_blank",rel:"noopener noreferrer"},yn=s("https://www.keil.com/support/man/docs/armclang_intro/armclang_intro_ddx1471430827125.htm"),wn={href:"https://karthikkaranth.me/blog/calling-c-code-from-go/",target:"_blank",rel:"noopener noreferrer"},xn=s("https://karthikkaranth.me/blog/calling-c-code-from-go/"),Gn={href:"https://chai2010.cn/advanced-go-programming-book/ch2-cgo/ch2-03-cgo-types.html",target:"_blank",rel:"noopener noreferrer"},qn=s("https://chai2010.cn/advanced-go-programming-book/ch2-cgo/ch2-03-cgo-types.html"),Tn={href:"https://blog.csdn.net/lastsweetop/article/details/78830772",target:"_blank",rel:"noopener noreferrer"},Sn=s("https://blog.csdn.net/lastsweetop/article/details/78830772");function Pn(Cn,Dn){const a=c("ExternalLinkIcon");return o(),i("div",null,[r,n("p",null,[k,n("a",d,[v,t(a)]),m,b,h]),g,n("p",null,[_,f,y,n("a",w,[x,t(a)]),G,q]),T,n("p",null,[S,P,C,n("a",D,[A,t(a)]),B]),R,n("p",null,[E,$,L,X,I,U,N,O,V,n("a",z,[M,t(a)]),j]),F,n("p",null,[H,n("a",Q,[Y,t(a)]),W]),n("blockquote",null,[n("p",null,[J,n("a",K,[Z,t(a)]),nn])]),sn,n("p",null,[an,tn,n("a",pn,[en,t(a)]),cn]),on,n("p",null,[ln,n("a",un,[rn,t(a)]),kn]),dn,vn,mn,n("ul",null,[n("li",null,[n("a",bn,[hn,t(a)])]),n("li",null,[n("a",gn,[_n,t(a)])]),n("li",null,[n("a",fn,[yn,t(a)])]),n("li",null,[n("a",wn,[xn,t(a)])]),n("li",null,[n("a",Gn,[qn,t(a)])]),n("li",null,[n("a",Tn,[Sn,t(a)])])])])}var Rn=e(u,[["render",Pn],["__file","magic.html.vue"]]);export{Rn as default};
