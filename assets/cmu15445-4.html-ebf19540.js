const t=JSON.parse('{"key":"v-3860498d","path":"/posts/database/cmu15445-4.html","title":"谈谈关系数据库的设计与实现(4)——执行器","lang":"zh-CN","frontmatter":{"icon":"edit","title":"谈谈关系数据库的设计与实现(4)——执行器","date":"2023-04-22T00:00:00.000Z","tag":["sql","database","oltp"],"category":["database"],"description":"执行器 前面的两个小节中，分别介绍了缓存池组件以及支持存储引擎的 B+树，本节的主角是执行器。 数据库系统从客户端接收到 SQL 语句后，对语句解析、优化并得到该语句的「查询计划」，而执行器的作用就是按照查询计划来执行查询操作。 这里的查询操作，并不单单指数据查询，它包括如下几类操作： 访问、查询，如表遍历，记录查询等； 更改，如数据更新、插入、删除等； 其它，如 Limit、Offset、聚合函数，Join 等； 注意：bustub 中不会实现 SQL 解析器、优化器，这里也不做介绍。","head":[["meta",{"property":"og:url","content":"https://pedrogao.github.io/posts/database/cmu15445-4.html"}],["meta",{"property":"og:site_name","content":"廊中别苑"}],["meta",{"property":"og:title","content":"谈谈关系数据库的设计与实现(4)——执行器"}],["meta",{"property":"og:description","content":"执行器 前面的两个小节中，分别介绍了缓存池组件以及支持存储引擎的 B+树，本节的主角是执行器。 数据库系统从客户端接收到 SQL 语句后，对语句解析、优化并得到该语句的「查询计划」，而执行器的作用就是按照查询计划来执行查询操作。 这里的查询操作，并不单单指数据查询，它包括如下几类操作： 访问、查询，如表遍历，记录查询等； 更改，如数据更新、插入、删除等； 其它，如 Limit、Offset、聚合函数，Join 等； 注意：bustub 中不会实现 SQL 解析器、优化器，这里也不做介绍。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-22T13:56:51.000Z"}],["meta",{"property":"article:author","content":"pedrogao"}],["meta",{"property":"article:tag","content":"sql"}],["meta",{"property":"article:tag","content":"database"}],["meta",{"property":"article:tag","content":"oltp"}],["meta",{"property":"article:published_time","content":"2023-04-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-22T13:56:51.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"谈谈关系数据库的设计与实现(4)——执行器\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-04-22T00:00:00.000Z\\",\\"dateModified\\":\\"2023-04-22T13:56:51.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"pedrogao\\",\\"url\\":\\"https://github.com/pedrogao/\\"}]}"]]},"headers":[{"level":2,"title":"执行器","slug":"执行器","link":"#执行器","children":[{"level":3,"title":"处理模型","slug":"处理模型","link":"#处理模型","children":[]},{"level":3,"title":"执行计划","slug":"执行计划","link":"#执行计划","children":[]},{"level":3,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}]}],"git":{"createdTime":1682171811000,"updatedTime":1682171811000,"contributors":[{"name":"pedrogao","email":"1312342604@qq.com","commits":1}]},"readingTime":{"minutes":8.32,"words":2495},"filePathRelative":"posts/database/cmu15445-4.md","localizedDate":"2023年4月22日","excerpt":"<h2> 执行器</h2>\\n<p>前面的两个小节中，分别介绍了缓存池组件以及支持存储引擎的 B+树，本节的主角是执行器。</p>\\n<p>数据库系统从客户端接收到 SQL 语句后，对语句解析、优化并得到该语句的「查询计划」，而执行器的作用就是按照查询计划来执行查询操作。</p>\\n<p>这里的查询操作，并不单单指数据查询，它包括如下几类操作：</p>\\n<ul>\\n<li>访问、查询，如表遍历，记录查询等；</li>\\n<li>更改，如数据更新、插入、删除等；</li>\\n<li>其它，如 Limit、Offset、聚合函数，Join 等；</li>\\n</ul>\\n<blockquote>\\n<p>注意：bustub 中不会实现 SQL 解析器、优化器，这里也不做介绍。</p>\\n</blockquote>","autoDesc":true}');export{t as data};
