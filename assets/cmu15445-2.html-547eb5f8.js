const t=JSON.parse('{"key":"v-34f6984f","path":"/posts/database/cmu15445-2.html","title":"谈谈关系数据库的设计与实现(2)——缓存池","lang":"zh-CN","frontmatter":{"icon":"edit","title":"谈谈关系数据库的设计与实现(2)——缓存池","date":"2023-04-22T00:00:00.000Z","tag":["sql","database","oltp"],"category":["database"],"description":"缓存池 减少磁盘和内存之间的数据 IO 次数是数据库提升查询效率的主要途径之一，也是数据设计的主要目标。 为了达到这个目标，数据库需要在内存中保留尽可能多的数据页，最大限度地提高在内存中处理数据查询的机会，减少磁盘访问次数。 但不可能将所有页都保存在内存中，我们需要一个管理内存与磁盘数据的中介组件——缓存池。 磁盘上保存的数据实则是缓存池数据的副本。缓存池中的基本单位是页(对应操作系统 IO 的基本单位也是页)，每一页在磁盘上都有一个副本，磁盘上的副本可能是老数据(脏页)，负责分配缓存池的组件被称为缓存管理器(buffer_manager)。","head":[["meta",{"property":"og:url","content":"https://pedrogao.github.io/posts/database/cmu15445-2.html"}],["meta",{"property":"og:site_name","content":"廊中别苑"}],["meta",{"property":"og:title","content":"谈谈关系数据库的设计与实现(2)——缓存池"}],["meta",{"property":"og:description","content":"缓存池 减少磁盘和内存之间的数据 IO 次数是数据库提升查询效率的主要途径之一，也是数据设计的主要目标。 为了达到这个目标，数据库需要在内存中保留尽可能多的数据页，最大限度地提高在内存中处理数据查询的机会，减少磁盘访问次数。 但不可能将所有页都保存在内存中，我们需要一个管理内存与磁盘数据的中介组件——缓存池。 磁盘上保存的数据实则是缓存池数据的副本。缓存池中的基本单位是页(对应操作系统 IO 的基本单位也是页)，每一页在磁盘上都有一个副本，磁盘上的副本可能是老数据(脏页)，负责分配缓存池的组件被称为缓存管理器(buffer_manager)。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-22T13:56:51.000Z"}],["meta",{"property":"article:author","content":"pedrogao"}],["meta",{"property":"article:tag","content":"sql"}],["meta",{"property":"article:tag","content":"database"}],["meta",{"property":"article:tag","content":"oltp"}],["meta",{"property":"article:published_time","content":"2023-04-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-22T13:56:51.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"谈谈关系数据库的设计与实现(2)——缓存池\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-04-22T00:00:00.000Z\\",\\"dateModified\\":\\"2023-04-22T13:56:51.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"pedrogao\\",\\"url\\":\\"https://github.com/pedrogao/\\"}]}"]]},"headers":[{"level":2,"title":"缓存池","slug":"缓存池","link":"#缓存池","children":[{"level":3,"title":"淘汰策略","slug":"淘汰策略","link":"#淘汰策略","children":[]},{"level":3,"title":"缓存管理器","slug":"缓存管理器","link":"#缓存管理器","children":[]},{"level":3,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}]}],"git":{"createdTime":1682171811000,"updatedTime":1682171811000,"contributors":[{"name":"pedrogao","email":"1312342604@qq.com","commits":1}]},"readingTime":{"minutes":14.79,"words":4438},"filePathRelative":"posts/database/cmu15445-2.md","localizedDate":"2023年4月22日","excerpt":"<h2> 缓存池</h2>\\n<p>减少磁盘和内存之间的数据 IO 次数是数据库提升查询效率的主要途径之一，也是数据设计的主要目标。</p>\\n<p>为了达到这个目标，数据库需要在内存中保留尽可能多的数据页，最大限度地提高在内存中处理数据查询的机会，减少磁盘访问次数。</p>\\n<p>但不可能将所有页都保存在内存中，我们需要一个管理内存与磁盘数据的中介组件——缓存池。</p>\\n<p>磁盘上保存的数据实则是缓存池数据的副本。缓存池中的基本单位是页(对应操作系统 IO 的基本单位也是页)，每一页在磁盘上都有一个副本，磁盘上的副本可能是老数据(脏页)，负责分配缓存池的组件被称为缓存管理器(buffer_manager)。</p>","autoDesc":true}');export{t as data};
